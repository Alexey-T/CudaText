[html]
extends=
filters=html
type=xml

[snippets-html]
!!!=<!DOCTYPE html>
!!!4t=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
!!!4s=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
!!!xt=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
!!!xs=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
!!!xxs=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
c=<!-- | -->
nb=&nbsp;
lt=&lt;
gt=&gt;

[elementmap]
audio=source
colgroup=col
map=area
object=param
ol=li
optgroup=option
p=span
select=option
table=tr
tbody=tr
tfoot=tr
thead=tr
tr=td
ul=li
video=source

[abbreviations-html]
!=html:5
a:link=<a href="http://|">
a:mail=<a href="mailto:|">
a=<a href="|">
abbr=<abbr title="|">
acr=<acronym title="|">
acronym=<acronym title="|">
adr=address
area:c=<area shape="circle" coords="|" href="|" alt="|" />
area:d=<area shape="default" href="|" alt="|" />
area:p=<area shape="poly" coords="|" href="|" alt="|" />
area:r=<area shape="rect" coords="|" href="|" alt="|" />
area=<area shape="|" coords="|" href="|" alt="|" />
art=article
audio=<audio src="|">
base=<base href="|" />
basefont=<basefont/>
bdo:l=<bdo dir="ltr">
bdo:r=<bdo dir="rtl">
bdo=<bdo dir="|">
body=<body>\n\t|\n
bq=blockquote
br=<br/>
btn:d=button[disabled.]
btn:r=button[type=reset]
btn:s=button[type=submit]
btn=button
button:d=button[disabled.]
button:disabled=button[disabled.]
button:r=button[type=reset]
button:reset=button[type=reset]
button:s=button[type=submit]
button:submit=button[type=submit]
cap=caption
cmd=command
col=<col/>
colg+=colgroup>col
colg=colgroup
colgroup+=colgroup>col
command=<command/>
datag=datagrid
datal=datalist
det=details
dl+=dl>dt+dd
dlg=dialog
doc=html>(head>meta[charset=${1:charset}]+title{${2:Document}})+body
doc4=html>(head>meta[http-equiv="Content-Type" content="text/html;charset=${1:charset}"]+title{${2:Document}})+body
emb=embed
embed=<embed src="|" type="|" />
fieldset:d=fieldset[disabled.]
fieldset:disabled=fieldset[disabled.]
fig=figure
figc=figcaption
form:get=<form action="|" method="get">
form:post=<form action="|" method="post">
form=<form action="|">
frame=<frame/>
fset:d=fieldset[disabled.]
fset=fieldset
fst:d=fieldset[disabled.]
fst=fieldset
ftr=footer
hdr=header
hr=<hr/>
html:4s=!!!4s+doc4[lang=${1:lang}]
html:4t=!!!4t+doc4[lang=${1:lang}]
html:5=!!!+doc[lang=${1:lang}]
html:xml=<html xmlns="http://www.w3.org/1999/xhtml">
html:xs=!!!xs+doc4[xmlns=http://www.w3.org/1999/xhtml xml:lang=${1:lang}]
html:xt=!!!xt+doc4[xmlns=http://www.w3.org/1999/xhtml xml:lang=${1:lang}]
html:xxs=!!!xxs+doc4[xmlns=http://www.w3.org/1999/xhtml xml:lang=${1:lang}]
ifr=iframe
iframe=<iframe src="|" frameborder="0">
img:s=<img srcset="|" src="|" alt="|" />
img:sizes=<img sizes="|" srcset="|" src="|" alt="|" />
img:srcset=<img srcset="|" src="|" alt="|" />
img:z=<img sizes="|" srcset="|" src="|" alt="|" />
img=<img src="|" alt="|" />
inp=<input type="${1:text}" name="|" id="|" />
input:b=<input type="button" value="|" />
input:button=<input type="button" value="|" />
input:c=inp[type=checkbox]
input:checkbox=inp[type=checkbox]
input:color=inp[type=color]
input:date=inp[type=date]
input:datetime=inp[type=datetime]
input:datetime-local=inp[type=datetime-local]
input:email=inp[type=email]
input:f=inp[type=file]
input:file=inp[type=file]
input:h=input[type=hidden name]
input:hidden=input[type=hidden name]
input:i=<input type="image" src="|" alt="|" />
input:image=<input type="image" src="|" alt="|" />
input:month=inp[type=month]
input:number=inp[type=number]
input:p=inp[type=password]
input:password=inp[type=password]
input:r=inp[type=radio]
input:radio=inp[type=radio]
input:range=inp[type=range]
input:reset=input:button[type=reset]
input:s=<input type="submit" value="|" />
input:search=inp[type=search]
input:submit=<input type="submit" value="|" />
input:t=inp
input:tel=inp[type=tel]
input:text=inp
input:time=inp[type=time]
input:url=inp[type=url]
input:week=inp[type=week]
input=<input type="${1:text}" />
isindex=<isindex/>
keygen=<keygen/>
kg=keygen
label=<label for="|">
leg=legend
link:atom=<link rel="alternate" type="application/atom+xml" title="Atom" href="${1:atom.xml}" />
link:css=<link rel="stylesheet" href="${1:style}.css" />
link:favicon=<link rel="shortcut icon" type="image/x-icon" href="${1:favicon.ico}" />
link:im=<link rel="import" href="${1:component}.html" />
link:import=<link rel="import" href="${1:component}.html" />
link:print=<link rel="stylesheet" href="${1:print}.css" media="print" />
link:rss=<link rel="alternate" type="application/rss+xml" title="RSS" href="${1:rss.xml}" />
link:touch=<link rel="apple-touch-icon" href="${1:favicon.png}" />
link=<link rel="stylesheet" href="|" />
map+=map>area
map=<map name="|">
marquee=<marquee behavior="|" direction="|">
menu:c=menu[type=context]>
menu:context=menu[type=context]>
menu:t=menu[type=toolbar]>
menu:toolbar=menu[type=toolbar]>
meta:compat=<meta http-equiv="X-UA-Compatible" content="${1:IE=7}" />
meta:utf=<meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
meta:win=<meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
meta:vp=<meta name="viewport" content="width=${1:device-width}, user-scalable=${2:no}, initial-scale=${3:1.0}, maximum-scale=${4:1.0}, minimum-scale=${5:1.0}" />
meta=<meta/>
mn=main
obj=object
object=<object data="|" type="|">
ol+=ol>li
opt=<option value="|">
optg+=optgroup>option
optg=optgroup
optgroup+=optgroup>option
option=<option value="|">
out=output
param=<param name="|" value="|" />
pic+=picture>source:srcset+img
pic=picture
picture=<picture>
prog=progress
ri:a=pic>src:m+img
ri:art=pic>src:m+img
ri:d=img:s
ri:dpr=img:s
ri:t=pic>src:t+img
ri:type=pic>src:t+img
ri:v=img:z
ri:viewport=img:z
script:src=<script src="|">
script=<script !src="|">
sect=section
select:d=select[disabled.]
select:disabled=select[disabled.]
select+=select>option
select=<select name="|" id="|">
source:media:sizes=<source media="(${1:min-width: })" sizes="|" srcset="|"/>
source:media:type=<source media="(${1:min-width: })" srcset="|" type="${2:image/}"/>
source:media=<source media="(${1:min-width: })" srcset="|"/>
source:sizes:type=<source sizes="|" srcset="|" type="${1:image/}"/>
source:sizes=<source sizes="|" srcset="|"/>
source:src=<source src="|" type="|"/>
source:srcset=<source srcset="|"/>
source:type=<source srcset="|" type="${1:image/}"/>
source=<source/>
src:m=<source media="(${1:min-width: })" srcset="|"/>
src:mt=<source media="(${1:min-width: })" srcset="|" type="${2:image/}"/>
src:mz=<source media="(${1:min-width: })" sizes="|" srcset="|"/>
src:s=<source srcset="|"/>
src:sc=<source src="|" type="|"/>
src:t=<source srcset="|" type="${1:image/}"/>
src:z=<source sizes="|" srcset="|"/>
src:zt=<source sizes="|" srcset="|" type="${1:image/}"/>
str=strong
style=<style>
table+=table>tr>td
tarea=textarea
tem=template
textarea=<textarea name="|" id="|" cols="${1:30}" rows="${2:10}">
tr+=tr>td
track=<track />
ul+=ul>li
video=<video src="|">
wbr=<wbr />

[css]
filters=
extends=
type=css

[snippets-css]
!=!important|
@f+=@font-face {\n\tfont-family: '${1:FontName}';\n\tsrc: url('${2:FileName}.eot');\n\tsrc: url('${2:FileName}.eot?#iefix') format('embedded-opentype'),\n\t\t url('${2:FileName}.woff') format('woff'),\n\t\t url('${2:FileName}.ttf') format('truetype'),\n\t\t url('${2:FileName}.svg#${1:FontName}') format('svg');\n\tfont-style: ${3:normal};\n\tfont-weight: ${4:normal};\n}
@f=@font-face {\n\tfont-family:|;\n\tsrc:url(|);\n}
@i=@import url(|);
@import=@import url(|);
@kf=@-webkit-keyframes ${1:identifier} {\n\t${2:from} { ${3} }${6}\n\t${4:to} { ${5} }\n}\n@-o-keyframes ${1:identifier} {\n\t${2:from} { ${3} }${6}\n\t${4:to} { ${5} }\n}\n@-moz-keyframes ${1:identifier} {\n\t${2:from} { ${3} }${6}\n\t${4:to} { ${5} }\n}\n@keyframes ${1:identifier} {\n\t${2:from} { ${3} }${6}\n\t${4:to} { ${5} }\n}
@m=@media ${1:screen} {\n\t|\n}
@media=@media ${1:screen} {\n\t|\n}
ac:c=align-content:center;
ac:fe=align-content:flex-end;
ac:fs=align-content:flex-start;
ac:s=align-content:stretch;
ac:sa=align-content:space-around;
ac:sb=align-content:space-between;
ac=align-content:|;
ai:b=align-items:baseline;
ai:c=align-items:center;
ai:fe=align-items:flex-end;
ai:fs=align-items:flex-start;
ai:s=align-items:stretch;
ai=align-items:|;
anim-=animation:${1:name} ${2:duration} ${3:timing-function} ${4:delay} ${5:iteration-count} ${6:direction} ${7:fill-mode};
anim=animation:|;
animdel=animation-delay:${1:time};
animdir:a=animation-direction:alternate;
animdir:ar=animation-direction:alternate-reverse;
animdir:n=animation-direction:normal;
animdir:r=animation-direction:reverse;
animdir=animation-direction:${1:normal};
animdur=animation-duration:${1:0}s;
animfm:b=animation-fill-mode:backwards;
animfm:bh=animation-fill-mode:both;
animfm:bt=animation-fill-mode:both;
animfm:f=animation-fill-mode:forwards;
animfm=animation-fill-mode:${1:both};
animic:i=animation-iteration-count:infinite;
animic=animation-iteration-count:${1:1};
animn=animation-name:${1:none};
animps:p=animation-play-state:paused;
animps:r=animation-play-state:running;
animps=animation-play-state:${1:running};
animtf:cb=animation-timing-function:cubic-bezier(${1:0.1}, ${2:0.7}, ${3:1.0}, ${3:0.1});
animtf:e=animation-timing-function:ease;
animtf:ei=animation-timing-function:ease-in;
animtf:eio=animation-timing-function:ease-in-out;
animtf:eo=animation-timing-function:ease-out;
animtf:l=animation-timing-function:linear;
animtf=animation-timing-function:${1:linear};
ap=appearance:${1:none};
as:a=align-self:auto;
as:b=align-self:baseline;
as:c=align-self:center;
as:fe=align-self:flex-end;
as:fs=align-self:flex-start;
as:s=align-self:stretch;
as=align-self:|;
b:a=bottom:auto;
b=bottom:|;
bb=border-bottom:|;
bd:n=border:none;
bd+=border:${1:1px} ${2:solid} ${3:#000};
bd=border:|;
bdb:n=border-bottom:none;
bdb+=border-bottom:${1:1px} ${2:solid} ${3:#000};
bdb=border-bottom:|;
bdbc:t=border-bottom-color:transparent;
bdbc=border-bottom-color:#${1:000};
bdbi:n=border-bottom-image:none;
bdbi=border-bottom-image:url(|);
bdbk:c=border-break:close;
bdbk=border-break:${1:close};
bdbli:c=border-bottom-left-image:continue;
bdbli:n=border-bottom-left-image:none;
bdbli=border-bottom-left-image:url(|);
bdblrs=border-bottom-left-radius:|;
bdbri:c=border-bottom-right-image:continue;
bdbri:n=border-bottom-right-image:none;
bdbri=border-bottom-right-image:url(|);
bdbrrs=border-bottom-right-radius:|;
bdbs:n=border-bottom-style:none;
bdbs=border-bottom-style:|;
bdbw=border-bottom-width:|;
bdc:t=border-color:transparent;
bdc=border-color:#${1:000};
bdci:c=border-corner-image:continue;
bdci:n=border-corner-image:none;
bdci=border-corner-image:url(|);
bdcl:c=border-collapse:collapse;
bdcl:s=border-collapse:separate;
bdcl=border-collapse:|;
bdf:c=border-fit:clip;
bdf:of=border-fit:overflow;
bdf:ow=border-fit:overwrite;
bdf:r=border-fit:repeat;
bdf:sc=border-fit:scale;
bdf:sp=border-fit:space;
bdf:st=border-fit:stretch;
bdf=border-fit:${1:repeat};
bdi:n=border-image:none;
bdi=border-image:url(|);
bdl:n=border-left:none;
bdl+=border-left:${1:1px} ${2:solid} ${3:#000};
bdl=border-left:|;
bdlc:t=border-left-color:transparent;
bdlc=border-left-color:#${1:000};
bdlen:a=border-length:auto;
bdlen=border-length:|;
bdli:n=border-left-image:none;
bdli=border-left-image:url(|);
bdls:n=border-left-style:none;
bdls=border-left-style:|;
bdlw=border-left-width:|;
bdr:n=border-right:none;
bdr+=border-right:${1:1px} ${2:solid} ${3:#000};
bdr=border-right:|;
bdrc:t=border-right-color:transparent;
bdrc=border-right-color:#${1:000};
bdri:n=border-right-image:none;
bdri=border-right-image:url(|);
bdrs=border-radius:|;
bdrst:n=border-right-style:none;
bdrst=border-right-style:|;
bdrw=border-right-width:|;
bds:db=border-style:double;
bds:ds=border-style:dashed;
bds:dt=border-style:dotted;
bds:dtds=border-style:dot-dash;
bds:dtdtds=border-style:dot-dot-dash;
bds:g=border-style:groove;
bds:h=border-style:hidden;
bds:i=border-style:inset;
bds:n=border-style:none;
bds:o=border-style:outset;
bds:r=border-style:ridge;
bds:s=border-style:solid;
bds:w=border-style:wave;
bds=border-style:|;
bdsp=border-spacing:|;
bdt:n=border-top:none;
bdt+=border-top:${1:1px} ${2:solid} ${3:#000};
bdt=border-top:|;
bdtc:t=border-top-color:transparent;
bdtc=border-top-color:#${1:000};
bdti:n=border-top-image:none;
bdti=border-top-image:url(|);
bdtli:c=border-top-left-image:continue;
bdtli:n=border-top-left-image:none;
bdtli=border-top-left-image:url(|);
bdtlrs=border-top-left-radius:|;
bdtri:c=border-top-right-image:continue;
bdtri:n=border-top-right-image:none;
bdtri=border-top-right-image:url(|);
bdtrrs=border-top-right-radius:|;
bdts:n=border-top-style:none;
bdts=border-top-style:|;
bdtw=border-top-width:|;
bdw=border-width:|;
bfv:h=backface-visibility:hidden;
bfv:v=backface-visibility:visible;
bfv=backface-visibility:|;
bg:ie=filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='${1:x}.png',sizingMethod='${2:crop}');
bg:n=background:none;
bg+=background:${1:#fff} url(${2}) ${3:0} ${4:0} ${5:no-repeat};
bg=background:#${1:000};
bga:f=background-attachment:fixed;
bga:s=background-attachment:scroll;
bga=background-attachment:|;
bgbk:bb=background-break:bounding-box;
bgbk:c=background-break:continuous;
bgbk:eb=background-break:each-box;
bgbk=background-break:|;
bgc:t=background-color:transparent;
bgc=background-color:#${1:fff};
bgcp:bb=background-clip:border-box;
bgcp:cb=background-clip:content-box;
bgcp:nc=background-clip:no-clip;
bgcp:pb=background-clip:padding-box;
bgcp=background-clip:${1:padding-box};
bgi:n=background-image:none;
bgi=background-image:url(|);
bgo:bb=background-origin:border-box;
bgo:cb=background-origin:content-box;
bgo:pb=background-origin:padding-box;
bgo=background-origin:|;
bgp=background-position:${1:0} ${2:0};
bgpx=background-position-x:|;
bgpy=background-position-y:|;
bgr:n=background-repeat:no-repeat;
bgr:rd=background-repeat:round;
bgr:sp=background-repeat:space;
bgr:x=background-repeat:repeat-x;
bgr:y=background-repeat:repeat-y;
bgr=background-repeat:|;
bgsz:a=background-size:auto;
bgsz:ct=background-size:contain;
bgsz:cv=background-size:cover;
bgsz=background-size:|;
bl=border-left:|;
br=border-right:|;
bt=border-top:|;
bxsh:n=box-shadow:none;
bxsh:r=box-shadow:${1:inset }${2:hoff} ${3:voff} ${4:blur} ${5:spread }rgb(${6:0}, ${7:0}, ${8:0});
bxsh:ra=box-shadow:${1:inset }${2:h} ${3:v} ${4:blur} ${5:spread }rgba(${6:0}, ${7:0}, ${8:0}, .${9:5});
bxsh=box-shadow:${1:inset }${2:hoff} ${3:voff} ${4:blur} ${5:color};
bxz:bb=box-sizing:border-box;
bxz:cb=box-sizing:content-box;
bxz=box-sizing:${1:border-box};
c:r=color:rgb(${1:0}, ${2:0}, ${3:0});
c:ra=color:rgba(${1:0}, ${2:0}, ${3:0}, .${4:5});
c=color:#${1:000};
cl:b=clear:both;
cl:l=clear:left;
cl:n=clear:none;
cl:r=clear:right;
cl=clear:${1:both};
cm=/* |${1:child} */
cnt:a=content:attr(|);
cnt:c=content:counter(|);
cnt:cq=content:close-quote;
cnt:cs=content:counters(|);
cnt:n=content:normal;
cnt:ncq=content:no-close-quote;
cnt:noq=content:no-open-quote;
cnt:oq=content:open-quote;
cnt=content:'|';
coi=counter-increment:|;
colm=columns:|;
colmc=column-count:|;
colmf=column-fill:|;
colmg=column-gap:|;
colmr=column-rule:|;
colmrc=column-rule-color:|;
colmrs=column-rule-style:|;
colmrw=column-rule-width:|;
colms=column-span:|;
colmw=column-width:|;
cor=counter-reset:|;
cp:a=clip:auto;
cp:r=clip:rect(${1:top} ${2:right} ${3:bottom} ${4:left});
cp=clip:|;
cps:b=caption-side:bottom;
cps:t=caption-side:top;
cps=caption-side:|;
ct:a=content:attr(|);
ct:c=content:counter(|);
ct:cq=content:close-quote;
ct:cs=content:counters(|);
ct:n=content:normal;
ct:ncq=content:no-close-quote;
ct:noq=content:no-open-quote;
ct:oq=content:open-quote;
ct=content:|;
cur:a=cursor:auto;
cur:c=cursor:crosshair;
cur:d=cursor:default;
cur:ha=cursor:hand;
cur:he=cursor:help;
cur:m=cursor:move;
cur:p=cursor:pointer;
cur:t=cursor:text;
cur=cursor:${1:pointer};
d:b=display:block;
d:cp=display:compact;
d:f=display:flex;
d:i=display:inline;
d:ib+=display: inline-block;\n*display: inline;\n*zoom: 1;
d:ib=display:inline-block;
d:if=display:inline-flex;
d:itb=display:inline-table;
d:li=display:list-item;
d:n=display:none;
d:rb=display:ruby;
d:rbb=display:ruby-base;
d:rbbg=display:ruby-base-group;
d:rbt=display:ruby-text;
d:rbtg=display:ruby-text-group;
d:ri=display:run-in;
d:tb=display:table;
d:tbc=display:table-cell;
d:tbcl=display:table-column;
d:tbclg=display:table-column-group;
d:tbcp=display:table-caption;
d:tbfg=display:table-footer-group;
d:tbhg=display:table-header-group;
d:tbr=display:table-row;
d:tbrg=display:table-row-group;
d=display:${1:block};
ec:h=empty-cells:hide;
ec:s=empty-cells:show;
ec=empty-cells:|;
f+=font:${1:1em} ${2:Arial,sans-serif};
f=font:|;
fef:eb=font-effect:emboss;
fef:eg=font-effect:engrave;
fef:n=font-effect:none;
fef:o=font-effect:outline;
fef=font-effect:|;
fem=font-emphasize:|;
femp:a=font-emphasize-position:after;
femp:b=font-emphasize-position:before;
femp=font-emphasize-position:|;
fems:ac=font-emphasize-style:accent;
fems:c=font-emphasize-style:circle;
fems:ds=font-emphasize-style:disc;
fems:dt=font-emphasize-style:dot;
fems:n=font-emphasize-style:none;
fems=font-emphasize-style:|;
ff:a=font-family: Arial, \"Helvetica Neue\", Helvetica, sans-serif;
ff:c=font-family:cursive;
ff:f=font-family:fantasy;
ff:m=font-family:monospace;
ff:s=font-family:serif;
ff:ss=font-family:sans-serif;
ff:t=font-family: \"Times New Roman\", Times, Baskerville, Georgia, serif;
ff:v=font-family: Verdana, Geneva, sans-serif;
ff=font-family:|;
fl:l=float:left;
fl:n=float:none;
fl:r=float:right;
fl=float:${1:left};
fs:i=font-style:italic;
fs:n=font-style:normal;
fs:o=font-style:oblique;
fs=font-style:${1:italic};
fsm:a=font-smooth:auto;
fsm:aw=font-smooth:always;
fsm:n=font-smooth:never;
fsm=font-smooth:|;
fst:c=font-stretch:condensed;
fst:e=font-stretch:expanded;
fst:ec=font-stretch:extra-condensed;
fst:ee=font-stretch:extra-expanded;
fst:n=font-stretch:normal;
fst:sc=font-stretch:semi-condensed;
fst:se=font-stretch:semi-expanded;
fst:uc=font-stretch:ultra-condensed;
fst:ue=font-stretch:ultra-expanded;
fst=font-stretch:|;
fw:b=font-weight:bold;
fw:br=font-weight:bolder;
fw:lr=font-weight:lighter;
fv:n=font-variant:normal;
fw:n=font-weight:normal;
fv:sc=font-variant:small-caps;
fv=font-variant:|;
fw=font-weight:|;
fx=flex:|;
fxb=flex-basis:|;
fxd:c=flex-direction:column;
fxd:cr=flex-direction:column-reverse;
fxd:r=flex-direction:row;
fxd:rr=flex-direction:row-reverse;
fxd=flex-direction:|;
fxf=flex-flow:|;
fxg=flex-grow:|;
fxsh=flex-shrink:|;
fxw:n=flex-wrap:nowrap;
fxw:w=flex-wrap:wrap;
fxw:wr=flex-wrap:wrap-reverse;
fxw=flex-wrap: |;
fz=font-size:|;
fza:n=font-size-adjust:none;
fza=font-size-adjust:|;
h:a=height:auto;
h=height:|;
jc:c=justify-content:center;
jc:fe=justify-content:flex-end;
jc:fs=justify-content:flex-start;
jc:sa=justify-content:space-around;
jc:sb=justify-content:space-between;
jc=justify-content:|;
l:a=left:auto;
l=left:|;
lh=line-height:|;
lis:n=list-style:none;
lis=list-style:|;
lisi:n=list-style-image:none;
lisi=list-style-image:|;
lisp:i=list-style-position:inside;
lisp:o=list-style-position:outside;
lisp=list-style-position:|;
list:c=list-style-type:circle;
list:d=list-style-type:disc;
list:dc=list-style-type:decimal;
list:dclz=list-style-type:decimal-leading-zero;
list:lr=list-style-type:lower-roman;
list:n=list-style-type:none;
list:s=list-style-type:square;
list:ur=list-style-type:upper-roman;
list=list-style-type:|;
lts=letter-spacing:|;
lts-n=letter-spacing:normal;
m:a=margin:auto;
m=margin:|;
mah:n=max-height:none;
mah=max-height:|;
mar=max-resolution:${1:res};
maw:n=max-width:none;
maw=max-width:|;
mb:a=margin-bottom:auto;
mb=margin-bottom:|;
mih=min-height:|;
mir=min-resolution:${1:res};
miw=min-width:|;
ml:a=margin-left:auto;
ml=margin-left:|;
mr:a=margin-right:auto;
mr=margin-right:|;
mt:a=margin-top:auto;
mt=margin-top:|;
ol:n=outline:none;
ol=outline:|;
olc:i=outline-color:invert;
olc=outline-color:#${1:000};
olo=outline-offset:|;
ols:db=outline-style:double;
ols:ds=outline-style:dashed;
ols:dt=outline-style:dotted;
ols:g=outline-style:groove;
ols:i=outline-style:inset;
ols:n=outline-style:none;
ols:o=outline-style:outset;
ols:r=outline-style:ridge;
ols:s=outline-style:solid;
ols=outline-style:|;
olw:m=outline-width:medium;
olw:tc=outline-width:thick;
olw:tn=outline-width:thin;
olw=outline-width:|;
op:ie=filter:progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
op:ms=-ms-filter:'progid:DXImageTransform.Microsoft.Alpha(Opacity=100)';
op+=opacity: $1;\nfilter: alpha(opacity=$2);
op=opacity:|;
ord=order:|;
ori:l=orientation:landscape;
ori:p=orientation:portrait;
ori=orientation:|;
orp=orphans:|;
ov:a=overflow:auto;
ov:h=overflow:hidden;
ov:s=overflow:scroll;
ov:v=overflow:visible;
ov=overflow:${1:hidden};
ovs:a=overflow-style:auto;
ovs:m=overflow-style:move;
ovs:mq=overflow-style:marquee;
ovs:p=overflow-style:panner;
ovs:s=overflow-style:scrollbar;
ovs=overflow-style:${1:scrollbar};
ovx:a=overflow-x:auto;
ovx:h=overflow-x:hidden;
ovx:s=overflow-x:scroll;
ovx:v=overflow-x:visible;
ovx=overflow-x:${1:hidden};
ovy:a=overflow-y:auto;
ovy:h=overflow-y:hidden;
ovy:s=overflow-y:scroll;
ovy:v=overflow-y:visible;
ovy=overflow-y:${1:hidden};
p=padding:|;
pb=padding-bottom:|;
pgba:al=page-break-after:always;
pgba:au=page-break-after:auto;
pgba:l=page-break-after:left;
pgba:r=page-break-after:right;
pgba=page-break-after:|;
pgbb:al=page-break-before:always;
pgbb:au=page-break-before:auto;
pgbb:l=page-break-before:left;
pgbb:r=page-break-before:right;
pgbb=page-break-before:|;
pgbi:au=page-break-inside:auto;
pgbi:av=page-break-inside:avoid;
pgbi=page-break-inside:|;
pl=padding-left:|;
pos:a=position:absolute;
pos:f=position:fixed;
pos:r=position:relative;
pos:s=position:static;
pos=position:${1:relative};
pr=padding-right:|;
pt=padding-top:|;
q:en=quotes:'\\201C' '\\201D' '\\2018' '\\2019';
q:n=quotes:none;
q:ru=quotes:'\\00AB' '\\00BB' '\\201E' '\\201C';
q=quotes:|;
r:a=right:auto;
r=right:|;
rsz:b=resize:both;
rsz:h=resize:horizontal;
rsz:n=resize:none;
rsz:v=resize:vertical;
rsz=resize:|;
t:a=top:auto;
t=top:|;
ta:c=text-align:center;
ta:j=text-align:justify;
ta:l=text-align:left;
ta:r=text-align:right;
ta=text-align:${1:left};
tal:a=text-align-last:auto;
tal:c=text-align-last:center;
tal:l=text-align-last:left;
tal:r=text-align-last:right;
ta-lst=text-align-last:|;
tbl:a=table-layout:auto;
tbl:f=table-layout:fixed;
tbl=table-layout:|;
td:l=text-decoration:line-through;
td:n=text-decoration:none;
td:o=text-decoration:overline;
td:u=text-decoration:underline;
td=text-decoration:${1:none};
te:a=text-emphasis:after;
te:ac=text-emphasis:accent;
te:b=text-emphasis:before;
te:c=text-emphasis:circle;
te:ds=text-emphasis:disc;
te:dt=text-emphasis:dot;
te:n=text-emphasis:none;
te=text-emphasis:|;
th:a=text-height:auto;
th:f=text-height:font-size;
th:m=text-height:max-size;
th:t=text-height:text-size;
th=text-height:|;
ti:-=text-indent:-9999px;
ti=text-indent:|;
tj:a=text-justify:auto;
tj:d=text-justify:distribute;
tj:ic=text-justify:inter-cluster;
tj:ii=text-justify:inter-ideograph;
tj:iw=text-justify:inter-word;
tj:k=text-justify:kashida;
tj:t=text-justify:tibetan;
tj=text-justify:|;
to:n=text-outline:none;
to+=text-outline:${1:0} ${2:0} ${3:#000};
to=text-outline:|;
tov:c=text-overflow:clip;
tov:e=text-overflow:ellipsis;
tov=text-overflow:${1:ellipsis};
tr:n=text-replace:none;
tr=text-replace:|;
trf:r=transform: rotate(${1:angle});
trf:rx=transform: rotateX(${1:angle});
trf:ry=transform: rotateY(${1:angle});
trf:rz=transform: rotateZ(${1:angle});
trf:sc=transform: scale(${1:x}, ${2:y});
trf:sc3=transform: scale3d(${1:x}, ${2:y}, ${3:z});
trf:scx=transform: scaleX(${1:x});
trf:scy=transform: scaleY(${1:y});
trf:scz=transform: scaleZ(${1:z});
trf:skx=transform: skewX(${1:angle});
trf:sky=transform: skewY(${1:angle});
trf:t=transform: translate(${1:x}, ${2:y});
trf:t3=transform: translate3d(${1:tx}, ${2:ty}, ${3:tz});
trf:tx=transform: translateX(${1:x});
trf:ty=transform: translateY(${1:y});
trf:tz=transform: translateZ(${1:z});
trf=transform:|;
trfo=transform-origin:|;
trfs=transform-style:${1:preserve-3d};
trs=transition:${1:prop} ${2:time};
trsde=transition-delay:${1:time};
trsdu=transition-duration:${1:time};
trsp=transition-property:${1:prop};
trstf=transition-timing-function:${1:tfunc};
tsh:n=text-shadow:none;
tsh:r=text-shadow:${1:h} ${2:v} ${3:blur} rgb(${4:0}, ${5:0}, ${6:0});
tsh:ra=text-shadow:${1:h} ${2:v} ${3:blur} rgba(${4:0}, ${5:0}, ${6:0}, .${7:5});
tsh+=text-shadow:${1:0} ${2:0} ${3:0} ${4:#000};
tsh=text-shadow:${1:hoff} ${2:voff} ${3:blur} ${4:#000};
tt:c=text-transform:capitalize;
tt:l=text-transform:lowercase;
tt:n=text-transform:none;
tt:u=text-transform:uppercase;
tt=text-transform:${1:uppercase};
tw:n=text-wrap:normal;
tw:no=text-wrap:none;
tw:s=text-wrap:suppress;
tw:u=text-wrap:unrestricted;
tw=text-wrap:|;
us=user-select:${1:none};
w:a=width:auto;
v:c=visibility:collapse;
v:h=visibility:hidden;
v:v=visibility:visible;
w=width:|;
v=visibility:${1:hidden};
va:b=vertical-align:bottom;
va:bl=vertical-align:baseline;
va:m=vertical-align:middle;
va:sub=vertical-align:sub;
va:sup=vertical-align:super;
va:t=vertical-align:top;
va:tb=vertical-align:text-bottom;
va:tt=vertical-align:text-top;
va=vertical-align:${1:top};
wfsm:a=-webkit-font-smoothing:antialiased;
wfsm:n=-webkit-font-smoothing:none
wfsm:s=-webkit-font-smoothing:subpixel-antialiased;
wfsm:sa=-webkit-font-smoothing:subpixel-antialiased;
wfsm=-webkit-font-smoothing:${1:antialiased};
whs:n=white-space:normal;
whs:nw=white-space:nowrap;
whs:p=white-space:pre;
whs:pl=white-space:pre-line;
whs:pw=white-space:pre-wrap;
whs=white-space:|;
whsc:ba=white-space-collapse:break-all;
whsc:bs=white-space-collapse:break-strict;
whsc:k=white-space-collapse:keep-all;
whsc:l=white-space-collapse:loose;
whsc:n=white-space-collapse:normal;
whsc=white-space-collapse:|;
wid=widows:|;
wm:btl=writing-mode:bt-lr;
wm:btr=writing-mode:bt-rl;
wm:lrb=writing-mode:lr-bt;
wm:lrt=writing-mode:lr-tb;
wm:rlb=writing-mode:rl-bt;
wm:rlt=writing-mode:rl-tb;
wm:tbl=writing-mode:tb-lr;
wm:tbr=writing-mode:tb-rl;
wm=writing-mode:${1:lr-tb};
wob:ba=word-break:break-all;
wob:k=word-break:keep-all;
wob:n=word-break:normal;
wob=word-break:|;
wos=word-spacing:|;
wow:b=word-wrap:break-word;
wow:n=word-wrap:none;
wow:nm=word-wrap:normal;
wow:s=word-wrap:suppress;
wow:u=word-wrap:unrestricted;
wow=word-wrap:|;
z:a=z-index:auto;
z=z-index:|;
zm=zoom:1;
zoo=zoom:1;

[xsl]
extends=html
filters=xsl|html
type=xml

[snippets-xsl]
!!!=<?xml version="1.0" encoding="UTF-8"?>

[abbreviations-xsl]
tm=<xsl:template match="|" mode="|">
tmatch=<xsl:template match="|" mode="|">
tn=<xsl:template name="|">
tname=<xsl:template name="|">
call=<xsl:call-template name="|"/>
ap=<xsl:apply-templates select="|" mode="|"/>
api=<xsl:apply-imports/>
imp=<xsl:import href="|"/>
inc=<xsl:include href="|"/>
ch=<xsl:choose>
wh=<xsl:when test="|">
xsl:when=<xsl:when test="|">
ot=<xsl:otherwise>
if=<xsl:if test="|">
par=<xsl:param name="|">
pare=<xsl:param name="|" select="|"/>
var=<xsl:variable name="|">
vare=<xsl:variable name="|" select="|"/>
wp=<xsl:with-param name="|" select="|"/>
key=<xsl:key name="|" match="|" use="|"/>
elem=<xsl:element name="|">
attr=<xsl:attribute name="|">
attrs=<xsl:attribute-set name="|">
cp=<xsl:copy select="|"/>
co=<xsl:copy-of select="|"/>
val=<xsl:value-of select="|"/>
for=<xsl:for-each select="|">
each=<xsl:for-each select="|">
tex=<xsl:text></xsl:text>
com=<xsl:comment>
msg=<xsl:message terminate="no">
fall=<xsl:fallback>
num=<xsl:number value="|"/>
nam=<namespace-alias stylesheet-prefix="|" result-prefix="|"/>
pres=<xsl:preserve-space elements="|"/>
strip=<xsl:strip-space elements="|"/>
proc=<xsl:processing-instruction name="|">
sort=<xsl:sort select="|" order="|"/>
choose+=xsl:choose>xsl:when+xsl:otherwise
xsl=!!!+xsl:stylesheet[version=1.0 xmlns:xsl=http://www.w3.org/1999/XSL/Transform]>{|}

[svg]
extends=
filters=html
type=xml

[snippets-svg]
!!!=<?xml version="1.0" encoding="UTF-8" standalone="no"?>
svgdoc=<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

[abbreviations-svg]
!svg=!!!+svgdoc+svg
svg=<svg version="1.1" xmlns="http://www.w3.org/2000/svg">
a=<a xlink:href="|">
ag=altGliph
agd=altGliphDef
agi=altGliphItem
anim=<animate attributeType="|" attributeName="|" from="|" to="|" dur="|" repeatCount="indefinite">
animate=<animate attributeType="|" attributeName="|" from="|" to="|" dur="|" repeatCount="indefinite">
ac=<animateColor>
am=<animateMotion>
at=<animateTransform>
c=circle
cp=colorPath
c-p=color-profile
cur=cursor
df=defs
e=<ellipse  cx="|" cy="|" rx="|" ry="|"/>
ellipse=<ellipse  cx="|" cy="|" rx="|" ry="|"/>
ff=<font-face>
fff=<font-face-format>
ffn=<font-face-name>
ffs=<font-face-src>
ffu=<font-face-uri>
fo=<foreignObject>
g=<g>
gl=<glyph>
glr=<glyphRef>
hk=<hkern>
i=<image xlink:href="|" x="|" y="|" width="|" height="|"/>
image=<image xlink:href="|" x="|" y="|" width="|" height="|"/>
l=<line>
lg=<linearGradient>
marker=<marker>
mask=<mask>
md=<metadata>
mg=<missing-glyph>
mp=<mpath>
path=<path d="|">
patt=<pattern>
pg=<polygon points="|">
pl=<polyline points="|">
rg=<radialGradient>
r=<rect x="|" y="|" width="|" height="|"/>
scr=<script>
sb=<symbol>
txt=<text>
tp=<textPath>
ts=<tspan>
u=<use xlink:href="|"/>
use=<use xlink:href="|"/>
v=<view>
vk=<vkern>

[xml]
extends=html
filters=xml
type=xml

[jsx]
extends=html
filters=jsx|html
type=xml

[less]
extends=css
type=css

[sass]
extends=css
type=css

[scss]
extends=css
type=css

[md]
extends=
filters=
type=md

[snippets-md]
h1=# ${1:Heading 1}\n|
h2=## ${1:Heading 2}\n|
h3=### ${1:Heading 3}\n|
h4=#### ${1:Heading 4}\n|
h5=##### ${1:Heading 5}\n|
h6=###### ${1:Heading 6}\n|
b=**${1:Bold Text}** |
i=*${1:Italic Text}* |
strike=~~${1:Strike Through}~~ |
bq=> ${1:Put a nice, beautiful}\n> ${2:quote here...}\n|
a=[${1:Link Title}](${2:Link Source}) |
code=`${1:Inline Code Snippet}` |
hr=---\n|
img=![${1:Image Title}](${2:Image Source}) |
pre=```${1:language}\n${2:Multi-line Code}\n```\n|
ol=1. ${1:First Item}\n2. ${2:Second Item}\n3. ${3:Third Item}\n|
ul=- ${1:First Item}\n- ${2:Second Item}\n- ${3:Third Item}\n|
table=| ${1:Column 1} | ${2:Column 2} |\n| ------------- | ------------- |\n| ${3:Cell 1-1} | ${4:Cell 1-2} |\n| ${5:Cell 2-1} | ${6:Cell 2-2} |\n|



