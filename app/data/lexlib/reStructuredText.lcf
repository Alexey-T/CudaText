object SyntAnal21: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Head'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -19
      Font.Name = 'Consolas'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Quote'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Code-block begin'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Code-block BG'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNone
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 15779980
      FormatType = ftBackGround
    end
    item
      DisplayName = 'List'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 16763594
    end
    item
      DisplayName = 'Bold'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Italic'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Bold-Italic'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold, fsItalic]
    end
    item
      DisplayName = 'Crossed'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsStrikeOut]
    end
    item
      DisplayName = 'Table'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Table BG'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWindowText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = clMoneyGreen
      FormatType = ftBackGround
    end
    item
      DisplayName = 'Sign'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = clYellow
    end
    item
      DisplayName = 'Var'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Link'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Link wiki'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clFuchsia
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'List head'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 10084526
    end>
  TokenRules = <
    item
      DisplayName = 'Head'
      StyleName = 'Head'
      Expression = '^(([\*\#=\-\+\^`~!"'#39':\._])\2+)$ \z '#13#10'^[\x20\l_].*$ \z '#13#10'^\1$'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Head simpler'
      StyleName = 'Head'
      Expression = '^[\l_].+$ \z'#13#10'^([\*\#=\-\+\^`~!"'#39':\._])\1{3,}$'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'List'
      StyleName = 'List'
      TokenType = 6
      Expression = 
        '^\x20*([\*\-\+]\x20|\d+\.\x20|\#+\.\x20|[a-z][\)\.]\x20|[ivxlm]+' +
        '\.\x20|\([a-z]+\)\x20)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Bold-Italic'
      StyleName = 'Bold-Italic'
      TokenType = 1
      Expression = '(?s) (\*\*\*)\S.*?(\*\*\*|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Bold'
      StyleName = 'Bold'
      TokenType = 1
      Expression = '(?s) (\*\*)\S.*?(\*\*|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Italic'
      StyleName = 'Italic'
      TokenType = 1
      Expression = '(?s) \* \S.*? (\*|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Quote'
      StyleName = 'Quote'
      TokenType = 3
      Expression = '(?s)``[^`\n]+``'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Link'
      StyleName = 'Link'
      TokenType = 8
      Expression = '`[^`]+`_+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Quote >'
      StyleName = 'Quote'
      TokenType = 3
      Expression = '^>.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Var'
      StyleName = 'Var'
      TokenType = 1
      Expression = '^\x20*:[^:]+:'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Sign'
      StyleName = 'Sign'
      TokenType = 3
      Expression = '\| \w.+? \|_*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Code ::'
      StyleName = 'Code-block BG'
      TokenType = 4
      Expression = '(?s)::$\z\z.+?\z(?=\z^\S)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Code-block begin'
      StyleName = 'Code-block begin'
      TokenType = 13
      Expression = '(?-i)^\.\.\x20code-block::.*$'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Code-block end'
      StyleName = 'Quote'
      TokenType = 14
      Expression = '\z(?=\z^\S)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Code spaces'
      StyleName = 'Code-block BG'
      TokenType = 4
      Expression = '^[\x20\x09]{4,}\S.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Table'
      StyleName = 'Table'
      TokenType = 7
      Expression = '^\x20*[\+\|] [\-\+=]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Link wiki'
      StyleName = 'Link wiki'
      TokenType = 9
      Expression = '[a-z]\w*_\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Table begin'
      StyleName = 'Table'
      TokenType = 10
      Expression = '^(\x20*==[=\x20\xA0]*\z)[^=\n].*?\z\1'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Table end'
      StyleName = 'Table'
      TokenType = 11
      Expression = '^\x20*==[=\x20\xA0]*$'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'List head'
      StyleName = 'List head'
      TokenType = 12
      Expression = '^\.\.\x20\w[\w\.\-\x20]+:+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Table symbols'
      StyleName = 'Table'
      TokenType = 10
      Expression = '\|'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Header'
      ConditionList = <
        item
          TokenTypes = 1
        end>
      EndOfTextClose = True
      DisplayInTree = False
      NameFmt = '%sz0'
      HighlightPos = cpAny
      CancelNextRules = True
      CollapseFmt = '%sz0'
      SelfClose = True
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Table begin'
      StyleName = 'Table BG'
      ConditionList = <
        item
          TokenTypes = 1024
        end>
      BlockEnd = 'Table end'
      DisplayInTree = False
      DynHighlight = dhRange
      HighlightPos = cpAny
      CancelNextRules = True
      CollapseFmt = 'Table...'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Table end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TokenTypes = 2048
        end>
      HighlightPos = cpAny
      CancelNextRules = True
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Code-block begin'
      StyleName = 'Code-block BG'
      ConditionList = <
        item
          TokenTypes = 8192
        end>
      BlockEnd = 'Code-block end'
      DisplayInTree = False
      DynHighlight = dhRange
      HighlightPos = cpAny
      CancelNextRules = True
      CollapseFmt = 'code-block'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Code-block end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TokenTypes = 16384
        end>
      HighlightPos = cpAny
      CancelNextRules = True
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '.. _note:'
    '  :field name: This is field.'
    ''
    'Head'
    '+++++'
    ''
    '* List'
    '   - List'
    '   + List'
    '   * List'
    '   iii. List  '
    '   text. Not list.'
    '   A) List'
    '   (iii) List'
    '  1. List'
    '  200. List'
    '   ###. List'
    ''
    '****************************************'
    'HTTPie '
    '****************************************'
    ''
    
      'HTTPie (pronounced *aitch-tee-tee-pie*) is a **command line HTTP' +
      ' client**.'
    
      'Its goal is to make CLI interaction with web services as **human' +
      '-friendly**'
    'as possible. It provides a simple ``http`` command'
    ''
    '.. image:: https://www.png'
    '    :alt: HTTPie compared to cURL'
    '    :align: center'
    ''
    
      'HTTPie is written in Python, and under the hood it uses the exce' +
      'llent'
    '`Requests`_ and `Pygments`_ libraries.'
    ''
    '============='
    'Main Features'
    '============='
    ''
    '* Expressive and intuitive syntax'
    '* Formatted and colorized terminal output'
    ''
    '|pypi| |unix_build| |windows_build| |coverage| |gitter|'
    ''
    
      '+-----------------------+---------------------------------------' +
      '--------------+'
    
      '| Item Type             | Description                           ' +
      '              |'
    
      '+=======================+=======================================' +
      '==============+'
    
      '| HTTP Headers          | Arbitrary HTTP header, e.g. ``X-API-To' +
      'ken:123``.    |'
    
      '| ``Name:Value``        |                                       ' +
      '              |'
    
      '+-----------------------+---------------------------------------' +
      '--------------+'
    ''
    '=== =='
    'Tst Tt'
    '=== =='
    'aaa bb'
    '=== =='
    ''
    '=== =='
    'Tst Tt'
    '=== =='
    'aaa bb'
    'aa   b'
    '=== =='
    ''
    'The next paragraph is a code sample::'
    ''
    '   It is not processed in any way, except'
    '   that the indentation is removed.'
    ''
    '   It can span multiple lines.'
    ''
    'This is a normal text paragraph again.')
  TokenTypeNames.Strings = (
    'Head'
    'Text'
    'Comment'
    'Quote'
    'Code'
    'Block'
    'List'
    'Table'
    'Link'
    'Link wiki'
    'Table begin'
    'Table end'
    'List head'
    'Code-block begin'
    'Code-block end')
  Extentions = 'rst'
  LexerName = 'reStructuredText'
  SkipSpaces = False
  Notes.Strings = (
    'Alexey (CudaText)'
    'Test: https://github.com/jkbrzt/httpie/blob/master/README.rst'
    'Tests: https://github.com/andgineer/TRegExpr/tree/master/docs')
  Charset = DEFAULT_CHARSET
end
