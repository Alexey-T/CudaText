object SyntAnal25: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Id key'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id value'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id special'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'NewDoc'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Timestamp'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Handle'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Directive'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clFuchsia
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Alias'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clLime
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Env var'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Brackets BG'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWindowText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = clMoneyGreen
      FormatType = ftBackGround
    end
    item
      DisplayName = '\Char'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?<=^[\x20\x09]*) \#.* | (?<=[\x20\x09])\#.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'NewDoc'
      StyleName = 'NewDoc'
      TokenType = 1
      Expression = '^---.* |'#13#10'^\.\.\.$'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id echo'
      StyleName = 'Id value'
      TokenType = 6
      Expression = '(?<=^[\x20\x09]*) echo\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id key'
      StyleName = 'Id key'
      TokenType = 6
      Expression = '(?<=^[\x20\x09]*) \w[^\x20\x09:]*? (?=:)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Timestamp'
      StyleName = 'Timestamp'
      TokenType = 7
      Expression = 
        '\d{4}-\d{2}-\d{2} ([\x20 T] \d+:\d+:\d+\.\d+ (-\d+:\d+)? (\x20 Z' +
        ')?)?'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Number float'
      StyleName = 'Number'
      TokenType = 5
      Expression = '(?<=\s)\d[\d_]*\.[\d_]+ (e[\+\-]?[\d_]+\b)?\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Number int'
      StyleName = 'Number'
      TokenType = 5
      Expression = 
        '(?<=\s)0b[01_]+\b |'#13#10'(?<=\s)0o[0-7_]+\b |'#13#10'(?<=\s)0x[0-9a-f_]+\b' +
        ' |'#13#10'(?<=\s)\d[\d_]*\b'#13#10
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id value'
      StyleName = 'Id value'
      TokenType = 2
      Expression = '(?<=\s)[\w\.][\w\.\-]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String "'
      StyleName = 'String'
      TokenType = 4
      Expression = '(?s)(?<=[\s\[\(\{,;])"(\\.|.)*?("|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String '#39
      StyleName = 'String'
      TokenType = 4
      Expression = '(?s)(?<=[\s\(\[\{,;])'#39'('#39#39'|.)*?('#39'|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Handle'
      StyleName = 'Handle'
      Expression = '(?<=\s)!+[^\x20\n\r]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Directive'
      StyleName = 'Directive'
      Expression = '^%\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Alias'
      StyleName = 'Alias'
      Expression = '[\*&]\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '1st -'
      StyleName = 'Id key'
      TokenType = 8
      Expression = '(?<=^[\x20\x09]*)\-\x20[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Env var'
      StyleName = 'Env var'
      Expression = '%[a-z_]\w*%'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '\Char'
      StyleName = '\Char'
      TokenType = 10
      Expression = '\\.'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol ()'
      StyleName = 'Symbol'
      TokenType = 9
      Expression = '[\(\)]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[\+,:;\*\{\}\[\]<>=%!\#\|\?&~\^'#39'"]'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Block'
      ConditionList = <
        item
          TokenTypes = 320
        end>
      EndOfTextClose = True
      NameFmt = '%s0'
      HighlightPos = cpAny
      GroupIndex = 20
      CollapseFmt = '%sz0'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Id special'
      StyleName = 'Id special'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            '.inf'
            '.Inf'
            '.INF'
            '.NaN'
            'false'
            'False'
            'FALSE'
            'n'
            'N'
            'no'
            'No'
            'NO'
            'null'
            'Null'
            'NULL'
            'off'
            'Off'
            'OFF'
            'on'
            'On'
            'ON'
            'true'
            'True'
            'TRUE'
            'y'
            'Y'
            'yes'
            'Yes'
            'YES')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '('
      ConditionList = <
        item
          TagList.Strings = (
            '(')
          TokenTypes = 512
        end>
      BlockEnd = ')'
      DisplayInTree = False
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = ')'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            ')')
          TokenTypes = 512
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '--- Doc'
    '...'
    'Null, null, no, .NaN, .inf'
    '0x10_af + 0b1_01 + 12.2e+3'
    '- !single_quote '#39'Tst '#39#39' tst '#39#39' tst'#39
    '- !!dbl_quote "Tst \" tst\'
    'end"'
    'y: y # first '#39'y'#39' must not be hilited, it'#39's a key'
    '&anchor'
    '%Yaml'
    '*Alias'
    '# Comment'
    'key# : value #Not comment at start'
    'transformers: #Comment'
    '- model: 10.20'
    '  test "quote" '#39'here'#39': Null'
    '  property_map:'
    '    - /some/path: __key__'
    '      external_name: id'
    '    - property: %name%'
    '      import_template: "%(First Name)s %(Last Name)s"'
    '      export:'
    '        - external_name: %FirstName%'
    
      '          export_transform: transform.regexp_extract('#39'([^ ]+) ?.' +
      '*$'#39')')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Id'
    'Symbol'
    'String'
    'Number'
    '^Id'
    'Timestamp'
    '^Symbol'
    'Symbol ()'
    '\Char')
  Extentions = 'yml yaml sublime-syntax'
  LexerName = 'YAML'
  Notes.Strings = (
    'Alexey (CudaText)')
  LineComment = '#'
  Charset = DEFAULT_CHARSET
end
