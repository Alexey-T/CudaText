Legend:
  + added
  - fixed
  * changed


1.62.0 (2018/09)

+ add: Multi Installer: options "Make menu group 'nnnn'" (make groups in Plugins menu)
* change: dialog "Lexer Properties": removed "Style type" option

1.61.0 (2018/09)

+ add: API to show decorations on gutter (will be used in Brackets Hilite plugin)
+ add: Addon Manager: new versioning system. Before: only plugins versions are saved, to v.inf files. Now: all add-ons versions are saved to a single file, settings/packages.ini. Old versions (v.inf) still show in the Update dialog.

1.60.5 (2018/09)

+ add: option "ui_tab_recent_on_close"
+ add: bind Shift+Alt+click to vertical selection (from first caret to clicked pos)
+ add: updated Multi Installer (suggest SQL, suggest more addons for HTML/CSS/JS/PHP)
+ add: API (to modify tab context menu)
* change: renamed file "py/cudax_lib/__init__.py" to "py/cudax_lib.py"; please delete old folder (py/cudax_lib)

1.60.0 (2018/08)

+ add: ability to group Plugins menu: see Wiki help topic "Plugin groups config"
+ add: preinstalled plugin Multi Installer (by Artem Gavrilov). It allows to quickly install bunch of add-ons for popular languages (HTML/CSS/JS/XML/Python etc). It is also auto-called on clean app installation (when "settings/history.json" not exists).
+ add: improved lexer JavaScript (Code Tree made correct for anonym functions)
+ add: improved lexer CSS (fix coloring of properties)
+ add: improved TutorialLexer4, added "Advice for C-like lexers"

1.59.2 (2018/08)

+ add: Code Tree filter: save filter (with dropdown list) to session
+ add: theme color "treeview, selected BG, not focused"; allows to see if Code Tree focused
* change: deleted option "lexer_line_separators"
- fix: on opening session, closing all tabs with confirmation was not correct
- fix: API for tab groups

1.59.0 (2018/08)

+ add: detection of UTF16 LE/BE without BOM
+ add: grouping modes "6 vert" and "6 horz"
+ add: Code Tree filter: each tab has its own filter text (initially empty)
+ add: Code Tree filter: input is combobox now; use Enter to add current text to dropdown 
+ add: tab context menu items: "Copy filename only", "Copy filepath only", "Copy full filepath"
+ add: Project Manager option "Open files by double-click"
+ add: improved lexer HTML: highlight <tag style="..."> content with CSS lexer
+ add: improved lexer Markdown: highlight {++add++}, {--del--}, {~~edit~~}
+ add: command "code tree: clear filter"
+ add: command "code tree: focus filter"
+ add: command "code tree: focus treeview"
+ add: command "ui: hide bottom panel"
+ add: on folding a range, caret(s) pos is corrected if it was inside that range
- fix: lexer Python: wrong highlighted strings like r'\'
- fix: CSS autocompletion inside <tag style="..."> didn't work with multiline string

1.58.2 (2018/08)

+ add: Code Tree has additional filter field
+ add: option "ui_tree_filter_layout"
+ add: more Unicode "white space" characters are shown in hex form
+ add: find/replace with regular expressions: "\w" supports all Unicode word letters
+ add: API
+ add: command line parameter -nh (no history)
+ add: command line parameter -z (open in viewer)
+ add: command "code tree: go to block for current node"
+ add: command "code tree: go to block for current node, and select"
+ add: on file opening, syntax colored text appears faster
+ add: on deleting lexer, its files .acp and .cuda-lexmap are also deleted
+ add: Project Manager option "Use 'preview tab' on item clicking"
+ add: Addon Manager now deletes most of its temporary files (please delete old folders cudatext_NNNNN in temp dir)
+ add: option "centering_width" now has effect only with "One group" mode
* change: option "ui_statusbar_tabsize" changed its default, now it supports app translation
* change: action "Set tab color" saves its settings not to user.json (please cleanup your user.json from *palette* keys)
* change: command line parameters: long keys variants are removed, only short ones left
* change: option "newdoc_eol" now affects Windows only (it's "Unix EOL" on Unix)
* change: deleted option "ui_statusbar_wrap"
* change: deleted option "ui_tree_show_lines"
* change: deleted option "ui_tree_cache"
- fix: minor UI fixes
- fix: Unix: support Python 3.7
- fix: Windows: support UNC filenames with "single instance"
- fix: lexer JSON (string rule)
- fix: group-mode commands *vert/*horz were swapped, if Config Menu plugin was used; you need to correct menu config for plugin

1.57.0 (2018/06)

+ add: preinstall plugin Options Editor (by @kvichans). And it can be updated in AddonManager as usual.
+ add: improve lexer JSON (different color for string before ":")
+ add: improve lexer Pascal (code tree for nested class of 1 level)
+ add: improve lexer Assembly (hilite labels, show labels in Code Tree, hilite dec/binary numbers with suffix)

1.56.4 (2018/06)

- fix: group-modes "1+2 horz/vert" gave errors
- fix: better support Auto Save plugin
- fix: lexer Pascal must support & char

1.56.3 (2018/06)

+ add: improved plugin "Insert Time": added command "Insert in default format", and command "Config" in "Options / Settings-plugins"
+ add: API

1.56.0 (2018/06)

+ add: option "autocomplete_html_lexers"
+ add: option "autocomplete_css_lexers"
+ add: add-ons can require other add-on(s) via install.inf file
- fix: HTML auto-completion must work in PHP files
- fix: HTML and PHP snippets were not adjusted for new PHP/PHP_ lexers
- fix: with "ui_one_instance":true, cannot open folder from 2nd instance (fixes by @vhanla, @fwhcat)
- fix: after "trim spaces" actions, must fix caret pos, if after line ends

1.55.1 (2018/05)

- fix: initial window position was forced to first monitor
- fix: app taskbar button was always on first monitor
- fix: position of auto-complete listbox sometimes not ok

1.55.0 (2018/05)

+ add: side panel and bottom panel can be floating (undocked).
    + menu item "View - Toggle floating side panel"
    + menu item "View - Toggle floating bottom panel"
    + command "toggle floating side panel"
    + command "toggle floating bottom panel"
+ add: floating tab groups 1/2/3. Now you can put tabs to 2nd monitor. To move tab to floating groups, in tab's context menu call "Move tab to group - Floating 1/2/3".
+ add: option "ui_float_groups_in_taskbar"
+ add: hotkey for "Command palette" set to famous Ctrl+Shift+P (second hotkey is F1)
* change: renamed menu item "Help - Commands" to "Help - Command palette"
* change: changed default of options "minimap_tooltip_show" and "fold_tooltip_show" to false
- fix: minimap rendering for PHP
- fix: lexers HTML, PHP (rule for &#nnnn;)
- fix: lexer Markdown (rule for header)

1.54.0 (2018/05)

+ announce:
  new plugin CudaTree with sub-plugins, TreeHelpers. 
  Most useful TreeHelpers: for Markdown, for PHP.
+ add: API
* change: lexer PHP code tree simplified (hidden $vars, HTML tags, JS items)
- fix: highlighting error in "lite lexers"
- fix: issue when pasting block w/o EOL, at empty line

1.53.4 (2018/05)

+ add: it's possble to show current char in the statusbar: statusbar options support new macros {char} {char_dec} {char_hex} {char_hex4}
- fix: crash when AddonManager installs a lexer, with any lexers active in tabs
- fix: crash when Lexer Library deletes a lexer active in tabs
- fix: issue in LaTeX lexer with "dynamic hiliting"
- fix: lexer VBScript

1.53.0 (2018/05)

+ add: can specify different fonts for italic / bold / bold+italic font-styles:
     + option "font_name_i"
     + option "font_name_b"
     + option "font_name_bi"
     + option "font_size_i"
     + option "font_size_b"
     + option "font_size_bi"
+ add: option "autocomplete_up_down_at_edge"
+ add: option "find_suggest_in_selection"
+ add: command "toggle window always on top"
* change: changed default of "font_ligatures" to true
* change: deleted option "spacing_x"
* change: deleted commands "show side panel: tabs list / project" (doable via plugin actions)

1.52.0 (2018/05)

+ add: implemented editor tooltips over [...] folded marks
+ add: option "fold_tooltip_show"
+ add: option "ui_sidebar_on_right"
+ add: UI-theme "white"
+ add: lexer PowerShell improved
+ add: command "show side panel, project"
+ add: command "show side panel, tabs list"
- fix: command "show side panel, code tree"
- fix: TabsList plugin made "ghost panels" which overlap Code Tree

1.51.2 (2018/05)

+ add: lexer PHP changed - to support PHP linters, and PHP file type icons. It is cloned from HTML lexer, with micro changes. Old PHP lexer renamed to PHP_.
+ add: lexer VBScript: improved folding
+ add: API

1.51.0 (2018/04)

+ add: lite-lexers speed increased on very long lines     
+ add: file tab captions show folder specifier, if they have same file name (e.g. 2 tabs with index.js will show as "index.js - dir1", "index.js - dir2")
+ add: AddonManager: menu item "Download: show links" (to paste to download manager)
+ add: Find/Replace dialog:
     + input fields are auto-sized
     + separate dialog is resizable
     * buttons have minimal width (for small screens)
     + option "find_show_select_all"
     + option "find_show_mark_all"
+ add: command "Scroll to begin"
+ add: command "Scroll to end"
+ add: command "Scroll page up"
+ add: command "Scroll page down"

1.50.0 (2018/04)

+ add: restored deleted unicode options:
       "unicode_proportional" (was "font_width", int, now boolean),
       "unicode_wide_allowed",
       "unicode_full_width"
+ add: dialog "File is maybe not text" gives additional buttons: viewer text mode, viewer unicode mode
+ add: option "ui_tab_disabled", to disable tabs (except first tab)
+ add: lexer Python: support for continuation char inside strings

1.49.0 (2018/04)

+ add: detection of letter chars improved, now should work for all international alphabets
+ add: command "Options / Settings - default/user", to open 2 configs
+ add: config "default.json" opens as read-only
* change: menu item "Groups" renamed to "=" and moved on top menu level
* change: changed console output: now output is buffered, and result is flushed to UI control when app is idle
* deleted option "font_width"
* deleted option "unicode_wide_allowed"
* deleted option "unicode_full_width"

1.48.0 (2018/04)

+ add: option "font_width", it gives new method to detect width of Unicode characters
+ add: improved plugin "Make Plugin", added code to read/write options
- fix: restoring of scroll pos on opening file

1.47.5 (2018/03)

+ add: API, support for plugin Terminal
+ add: improved auto-closing bracket: now when you type ")" after "(", closing bracket not duplicated (like PyCharm)
+ add: options "log_console", "log_debug"
+ add: option "unicode_full_width"
* change: renamed option "allow_wide_chars" to "unicode_wide_allowed"

1.47.0 (2018/03)

+ AddonManager/Install:
  + add: full list is sorted by caregory+name
  + add: allows to choose kind of addons, first item <Category>
  * change: disabled fuzzy search 
  * change: filter only by addon name (not by description)
  
+ add: API
- fix: "lexer dynamic hiliting" was broken after text editing
- fix: command File/Reopen must keep bookmarks

1.46.0 (2018/03)

* change: dialog "Go to" simplified, now it's simple modal form, like Commands dialog
- fix: with session reopened, if single file opened from shell, it wasn't activated
- fix: "restore lexer styles" didn't work

1.45.2 (2018/03)

+ add: minimap can show nice tooltip, when mouse cursor moves over minimap area (like KWrite)
+ add: option "minimap_tooltip_show"
+ add: option "minimap_tooltip_line_count"
+ add: option "minimap_tooltip_width"

1.45.0 (2018/03)

+ add: avoid flicker of folded blocks (unfold-fold) when editing Markdown/Python/etc files
+ add: ProjectManager: option "Toolbar icons"; option uses icons in folder data/projtoolbaricons
+ add: sidebar button "hamburger", which shows copy of main menu as popup
+ add: command "show main menu as popup"
+ add: command "toggle main menu", menu showing is saved to history
+ add: lexer PowerShell: small fixes
* change: TabsList: removed Config dialog

1.44.0 (2018/03)

+ add: pictures: allow dragging, zooming by Ctrl+ mouse wheel (Command+ on macOS)
+ add: pictures: show zoom % in statusbar
+ add: save to session/history also numbered bookmarks (was: only usual bookmarks)
+ add: option "hide_horiz_scrollbar"

1.43.0 (2018/02)

+ add: plugins can force show sidebar button, even if they don't run on start. New section in install.inf: [sidebar1] .. [sidebar3]. Used in plugins: ProjectManager, TabsList, FTP.
+ add: option "ui_toolbar_theme", with default theme
+ add: add-on type "toolbar theme", which installs icon set(s) for new option
+ add: improved look of "Go to bookmark" dialog
- fix: scroll pos didn't restore for inactive tabs (e.g. in session)

1.42.0 (2018/02)

+ add: reworked Code-Tree handling, fixed some crashes
+ add: reworked minimap, it paints faster/nicer
+ add: API for Code-Tree, now it's possible to make plugins which fill code-tree for some files
+ add: must not activate passive+unmodified tab by clicking its X
+ add: must disable tab closing during file loading/saving
+ add: optimizations for huge lines (len 1M+)
+ add: cursors for auto-scroll support high-DPI (thanks, FTurtle)
+ add: option "autocomplete_add_opening_bracket"
* change: sidebar: changed color to darker, changed icon set to white
* change: lexer Pascal: don't add fold-range "unit".."end."
- fix: flickering on making tab "near current tab"
- fix: flickering on opening many files (File/Open or session)
- fix: Windows IME input

1.40.0 (2018/02)

+ add: bookmarks support is rewritten. Now a bookmark is not deleted when its line is deleted. And memory usage of text storage is smaller now.
+ add: option "ui_tab_size_x_min", so can set tabs always wide
+ add: show "startup time" in console panel
+ add: support some more HTML5 tags
+ add: sidebar theme "octicons light 20x20"
- fix: Tabs List plugin (used deleted API)

1.39.0 (2018/01)

+ add: API
- fix: horz scrollbar incorrect on long lines (>window size)
- fix: "More carets" commands didn't consider tab-chars
- fix: "Check for updates" in x32 version

1.38.3 (2018/01)

+ add: option "indent_size" allows value 0: use indent from options "tab_size", "tab_spaces"
+ add: API
- minor fixes

1.38.0 (2018/01)

+ add: API to show floating tooltips (new plugin "HTML Tooltips")
+ add: show "zero-width space" as other unprinted chars

1.35.0 (2018/01)

+ add: auto-completion listbox in HTML allows multi-carets (like Sublime does)
+ add: on macOS, some features use Command-key instead of Ctrl-key: Ctrl+click; Ctrl+(double click); Ctrl with drag-drop of text
+ add: API
* change: option "lexer_dynamic_hilite" turned off by default (problems with option on macOS; slows down)
- fix: Find dialog: Shift key runs search

1.34.0 (2018/01)

+ add: many optimizations in core for scrolling speed on huge lines (4M chars)
+ add: Ctrl+(double click) now selects additional word
+ add: command "Selection - Expand selection to word" (like in many editors)
+ add: option "allow_wide_chars"
+ add: commands "find current word/sel next/prev": they select current word before search
* change: option "find_hotkey_find_next" is now hotkey, which is independant from focused input; its value "Enter" is ignored, other value works. "Enter" is now hardcoded hotkey.
- fix: cannot find string with trailing EOL (multi-line input)

1.32.2 (2018/01)

- minor fixes
+ add: API

1.32.0 (2018/01)

+ add: deleting of huge block (w/o undo) is instant now (before it was n seconds)
+ add: code-tree has horiz scrollbar
+ add: statusbar menu for tab-size: added sizes 3, 5, 6, 7
+ add: Project Manager variables for ExtTools plugin: {ProjMainFileNameOnly}, {ProjMainFileNameNoExt}
+ add: API for statusbar
- fix: Windows high-DPI wrong scaling of plugin dlgs
- fixes

1.31.0 (2017/12)

+ add: option "ui_non_text" has additional values, to auto open binary files in binary/hex modes
+ add: binary viewer uses "middle dot" unicode char
+ add: binary files save to sessions
+ add: lexer Perl reworked (hilite multiline comments, fix funcs in code-tree)
- fix: lexer C# (tree for funcs)
- fix: if disk file is read-only, then normal, app must not reopen it r/o

1.30.0 (2017/12)

+ add: binary viewer. It is called when non-text file is opened, with additional prompt. File size for binary viewer can be any.
+ add: dialog "Go to" works with binary viewer: can enter percents with "%" char, or hex offset
+ add: dialog "Go to" for editor: can enter percents with "%" char
+ add: prompts "file is not text", "file is too big" changed to one dialog (to allow binary view)
+ add: option "viewer_binary_width"
- fix: lexer C# code-tree for generic func

1.28.2 (2017/12)

- fix: major bugfix, crash on paste command (in 1.28.0)
- fix: files weren't added to recents on app closing
+ add: if deleting too big block (bigger than option "undo_limit"), do it fast w/o undo

1.28.0 (2017/12)

+ optimized memory usage on big files. E.g. Windows x32 version with 100M log: mem usage was 900M, now 720M.
+ add: support mouse wheel horizontal scrolling
+ add: macOS: can drag-drop folder from Finder onto CudaText icon
* change: lexer SCSS removed to add-ons
* change: lexer LESS removed to add-ons
* change: lexer "SynWrite acp files" removed to add-ons
* change: lexer "SynWrite snippets" removed to add-ons

1.27.0 (2017/12)

+ add: lite lexer SQL^
+ add: lexer API supports lite lexers
+ add: console lines "Init: cuda_nnnn" on loading plugins; option "py_init_log"
* change: usual lexer SQL removed to add-ons
+ add: AddonManager: added option "Install: show confirmation and report"
* change: AddonManager: removed confirmation "Install selected addon?"

1.26.0 (2017/11)

+ add: Lite lexers - for huge files, e.g. 800Mb XML file. Lite lexers don't support code-tree, folding, rich hiliting; but they work very fast on any file size (with average line length).
+ add: for too big files (option exists already) now lite lexers are detected
+ add: lite lexer XML^
+ add: lite lexer JSON^
+ add: lite lexer Log files^
- fix: wrong column selection, if tab-chars at line start

1.25.0 (2017/11)

+ add: option "ui_tab_multiline" - enable multi-line tabs
+ add: option "ui_max_lines_codetree" (default 8K lines) - disable code-tree for too big files
+ add: show console log, when session or project loads/saves
* change: lexer JSON: code-tree simplified (was slow on big files)
- fix: issue with last session, if "ui_reopen_session":false
- fix: Linux copy-to-clipboard could append zero char
- fix: option "autocomplete_autoshow_chars" must ignore numbers
- fix: some groups-related commands

1.24.3 (2017/11)

- fix: wrong scaling of few dialogs on Win10 high-dpi
- fix: if same file opened again, its tab wasn't activated
- fix: bug in 1.24.1, session's first loaded tab not parsed
- fix: major bug, code-tree didn't update on editing file
+ added: option "ui_tree_cache"
+ added: API

1.24.0 (2017/11)

+ added: non-RegEx search engine is rewritten. It now finds text in big (10Mb+) files 10-15 times faster. RegEx search is still slow, it builds string buffer from entire file.
+ added: lexer Bash: reworked to hilite ${complex vars} and `complex backtick commands`, now don't hilite "echo" command 
+ added: lexer Pascal: support keyword "operator" (hilite, show in code tree)
* change: Find dialog: Select-all don't join adjacent selections to bigger selection
* change: Find dialog: disable option "words" for multi-line input

1.23.6 (2017/11)

+ added: encoding "OEM", it maps to one of locale dependent OEM encodings (cp437, cp850, cp852, cp866 etc)
+ ProjectManager: show x icon for already deleted files
- fix: prev version shows "Cannot focus invisible window" on reopening session

1.23.5 (2017/11)

+ added: option "ui_tab_angled" (bool value), improved painting of angled tabs
* removed: option "ui_tab_angle" (int value)
+ added: menu item "View - Toggle always on top"
+ API
* lexer SQL: removed code tree support

1.23.0 (2017/10)

+ ProjectManager: single click opens file in the preview tab (italic caption), like in Sublime
+ added: option "ui_tab_preview_font_style"
+ API for preview tab

1.22.4 (2017/10)

+ added: option "ui_tab_position": can place tabs on top/bottom/left/right
* deleted option "ui_tab_bottom"
+ ask "file changed outside. reload?" also if file undo history is not empty
+ show "changed N lines" status after few commands (e.g. trim spaces)

1.22.0 (2017/10)

+ added: option "ui_tab_flat" (tabs look like in new Sublime)
+ added: caching of Code Tree content, so much faster switch betweeen tabs
+ added: UI theme color "tabs, flat, focus mark"
- fixed: commands "go to screen top/bottom/center" must work ok on long wrapped lines

1.21.0 (2017/10)

+ added submenu "Options / Settings-plugins", so plugins can put config commands here, instead of "Plugins". Two standard plugins (Tabs List, Comments) use this menu. http://wiki.freepascal.org/CudaText#Plugins
+ API for "Vim Mode" plugin
+ added commands: "go to line absolute begin/end (+select)" (keys Home/End consider spaces)
+ added commands: "go to word end (+select)" - like in Vim
+ added commands: "go to word next/prev, simple (+select)" - do alternate word jumps like in Vim

1.20.0 (2017/09)

+ reworked UI tabs: added option "ui_tab_button_layout"
+ option "ui_reload_unsaved_confirm"
- fix: painting on resize
- fix: ProjectManager using of old API

1.19.2 (2017/09)

+ main toolbar is now wrappable
+ UI tabs: added scroll arrows (left side) for lot of tabs
+ UI tabs: don't paint angled tabs (slow) if tab count>10
+ added theme color "tabs, special marks"
* change theme "sub": side panel made dark

1.19.0 (2017/09)

+ colored underlines for HTML's rgb(), for ex rgba(200, 200, 0, .4)
+ support no-break-space U+00A0: in show unprinted, in go-to-next-word
+ replace with reg.ex.: support change case (modifiers \U \L) for Unicode
+ option "ui_tree_show_tooltips" (turn off, if tooltips are irritating)
+ option "mouse_click_number_selects_eol"
+ improved lexer JS (reg-ex hiliting)
+ improved lexer LESS (numbers hiliting)
+ ProjectManager: commands "Go to main file", "Open main file"
+ ProjectManager: don't allow duplicate items
- fix: fold-marks didn't render on folded lines
- fix: must handle file creation error for command line
- fix: command "go to last editing pos"

1.18.0 (2017/09)

+ preinstalled plugin "Show Unsaved Changes" (command like in ST3)
+ Project Manager: allow drag-drop folder on CudaText - add folder to project
+ dialog "Go to": can enter line:column
+ code tree: context menu item "Sorted"
+ API for dialog "Go to"
+ API to embed editor-control to dialogs

1.17.0 (2017/09)

+ API to shade text (used in plugin Focus Mode)
+ Project Manager: added commands "Add current file", "Add all opened files"
+ lexer Bash: hilite varname before "=", don't hilite keyword after "."
- fixed: high-dpi in ProjManager and bottom panels
- fixed: initial dir of save-dialogs for untitled tabs
- fixed: wrong saved keys.json if "overwrite duplicate hotkey" was used with plugins
- fixed: code-tree lost vert scrollbar

1.16.0 (2017/08)

+ save-as untitled tab: suggest first free filename: new.txt, new1.txt, new2.txt... (like SynWrite)
+ reworked confirmation for duplicate hotkeys in Hotkey dialog (ask to overwrite inside this dialog)
+ mouse column selection: used "cross" cursor (like TextMate)
+ in single line inputs, make right edge of text near the edge of control (like Windows)
+ option "copy_column_aligned_by_spaces"
+ Addon Manager: don't allow to remove standard plugins
+ Addon Manager: cache addon filelists for 10 minutes
* dialog "Lexer library" reworked, used normal buttons on top, added button Hide/Show instead of checkmarks
- fixed: Project Manager "Show panel" command
- fixed: checkmarks in View/Groups menu
- fixed: column selection by mouse: "caret_after_end":false must not break column
- fixed: problem with ":line" in command line and single instance

1.15.0 (2017/08)

+ option "centering_width"
+ option "centering_for_distraction_free"
+ option "ruler_numeration"
+ command "go to screen center"
+ command "force final end-of-line"
+ Addon Manager: suggests to install several addons, one after another
+ Addon Manager: install-command splitted to: a) Install - items w/o installed ones, b) Re-install - already installed items
* removed option "ruler_from_1"
- fixed option "indent_makes_whole_line_sel"

1.14.5 (2017/08)

+ lexer-specific config + lexer-specific hotkeys config are supported for none-lexer ("lexer -.json", "keys lexer -.json")
+ lexer analysis for big files (>100K, option) is delayed now. Syntax analysis starts only after user ends typing text, and pause passed. Much faster on big files.
+ big optimizations for loading big files (>5Mb); e.g. 280 Mb log loaded before: 22sec, now: 7sec.

+ option "lexer_delayed_parsing_size"
+ option "lexer_delayed_parsing_pause"
+ option "ui_tab_new_near_current"
+ option "ruler_from_1"
+ option "unprinted_spaces_trailing"
+ option "indent_kind" has value "by spaces up to opening bracket" (like in ST3)
+ option "indent_makes_whole_line_sel"
+ option "autocomplete_trigger_chars" (like in ST3)
+ option "ui_statusbar_panels" has item for wrap-mode panel (default is hidden)
+ option "ui_statusbar_wrap"
+ option "wrap_enabled_max_lines", ie disabled word-wrap for huge files (>60K lines) to speedup
+ menu item "View - Toggle micromap"
+ menu item "View - Toggle unprinted chars - Spaces/tabs trailing only"
+ command "toggle word wrap mode (off/window/margin)"
+ Addon Manager: "Install from Github" saves version like "github 2016.10.20"
+ saving file error shows Retry/Cancel message (was OK only)
* removed option "autocomplete_autoshow_lexers" (use lexer-specific configs instead)

lexers:
+ added syntax-theme color for php-tag (<?php ?>)
+ added hilite of php-tag in lexers: HTML, CSS, JS
+ added hilite of standard color names in CSS
* changed link chain of lexers. Was before: PHP includes HTML, HTML includes CSS/JS, CSS/JS includes nothing. Now: HTML includes PHP/CSS/JS, CSS/JS includes PHP, PHP includes nothing. File type *.php is now handled by HTML lexer. 

fixes:
- fixed case-insensitive search in menu dialogs for non-En chars
- fixed non-working plugin hotkeys after any plugin installing
- fixed parasite scrolling if file was closed not on top
- fixes in JSON, Pascal lexers

1.13.1 (2017/07)

- reworked part of syntax hilite code, and fixed old 2 bugs of incorrect selection(s) rendering
+ added commands "column select without key modifier: on/off"; when mode turned on: a) mouse drag makes column selection, b) Shift+arrows make column selection
+ added statusbar field, for above mode (shows "-" for normal mode, "||" for column mode)
+ console: context menu item "toggle word wrap"
+ option "ui_console_wrap"
+ improved C++ lexer (fixed detect funcs for tree, updated keywords)
+ Project Manager: reaction to Enter key; option 'Open file after Go To File command'

1.12.0 (2017/06)

+ supported addons "filetypeicons" for Project Manager, e.g. "VSCode Material 24x24"
+ Project Manager: option "Icons theme"
+ Addon Manager: integrated function of "Install from Github" plugin
+ Insert Time plugin rewritten, it has several date formats and config file
+ commands dialog: focus last chosen item
+ commands "scroll line up/down" keep caret on screen after scroll
+ commands "go to screen top/bottom"
+ find/replace: auto turn on multi-line, on Ctrl+Enter press

1.11.0

+ new main icon (by FTurtle)
+ Project Manager: file type icons (from VSCode program)
+ Project Manager: expand "." to full dir name
+ focused input (in find/replace/goto/console) has its border highlighted
+ option "ui_active_border"
+ options "find_hotkey_*" for hotkeys in find/replace dialog
+ find/replace: hotkey Enter on focused replace-box: runs "Replace next" and keeps focus
+ find/replace: set hotkey for "Find first" to Alt+Enter
* find/replace: changed hotkey for "Replace next" to Alt+Z, "Replace without find next" to Ctrl+Alt+Z
* find/replace: changed hotkeys Alt+5/Alt+6/Alt+7 to Alt+O/Alt+E/Alt+K
* changed icons of toolbar
* removed option "log_dialogs"
- Windows: one more fix to show prev instance with ui_one_instance (by @vhanla)

1.10.0

+ preinstalled plugin Tabs List
+ Project Manager: read only toplevel dirs from disk, and read other dirs only on unfolding them in treeview (patch by @pohmelie)
+ Project Manager: added toolbar
+ API
* finder: don't put backward selection on find-backward
* lexer help file converted from CHM format to ODT
- fix: loosing editor focus on Linux

1.9.3

+ preinstalled Project Manager plugin
+ can open folder names from command line, e.g. "cudatext ." like Atom/Sublime can do
+ menuitem "File - Open folder", it calls Project Manager
+ menuitem "Help - Check for updates", it calls Addon Manager
+ API

1.9.1

+ finder: replace-all made much faster (note: when confirmation is on, you will see unchanged text, it will replace later)
- finder: count-all must find w/o overlaps (non-regex mode)
+ API

1.9.0

+ distraction-free mode, see http://wiki.freepascal.org/CudaText#Full-screen
+ added option "ui_fullscreen" with new values
* removed option "ui_fullscreen_hide"
* option "margin" changed default to 2000 (ie, hide)
- fixed: Win10 old issue when 2nd app instance cannot popup to front
+ API

1.8.6
- fixes for Windows high-dpi (dialogs, toolbar btns, folding icons)
+ API

1.8.5
- fixed for Windows high-dpi (scale more UI items)
- fix slow scrolling with minimap shown
+ option ui_tree_theme
+ command "place bookmarks on carets"
+ replace-all: show elapsed time in sec.

1.8.3
+ API (reworked dlg_proc)
+ Addon Manager: plugin Updater (like SynWrite)
* Addon Manager: used new channels url
+ Windows: support font ligatures (font Fira Code, only if caret not on line)
+ option font_ligatures
+ dialog Find: must show on top of CudaText dialogs
+ toolbar: add buttons Indent, Unindent

1.8.1
+ API (dlg_proc) for powerful dialogs
+ Linux: better support for font ligatures (std lexers changed a little)

1.8.0
* changed values for "newdoc_encoding" to short (like in API)
* changed suffix for macOS config keys from "__osx" to "__mac"
* changed: option "def_encoding_utf8" has OS suffix
+ API
- fix: Tab-key didnt jump in Find dialog

1.7.9
+ autocomplete listbox: chars .,;=<> should input to editor and close listbox
+ command line: added key --enclist
+ API
- fix: wrong minimap view color
- fix: minimap click scrolled editor to right 

1.7.8
+ macOS: horiz scroll by trackpad should work now
+ option ui_sidebar_show
+ option mouse_wheel_speed_vert
+ option mouse_wheel_speed_horz
+ command line: improved help (--help)
+ command line: aliases for keys (-h -v -r -n -w)
+ command line: added key --enc=
* command line: renamed key: --readonly
* changed format of file date in session (was number, now readable)
- fix: tabs "x" must act on mouse-up

1.7.7
+ menu item "File - New from template" (same as click on arrow near "new icon")
+ updated FCL-JSON lib from current FPC trunk
+ dont escape "/" in user.json
* changed ui_sidebar_theme to "octicons_20x20"

1.7.6
+ option "ui_sidebar_theme"
* sidebar buttons for "Search", "Go to"; deleted toolbar icons for the same
* toolbar hidden by default
* you should delete old files data/sideicons/*.png, now folder here
+ command "hide dialog: find"
+ command "hide dialog: go to"

1.7.5
- fix: moving window to 2nd monitor (Win10)
- fix: auto-scroll-horz didnt start on moving mouse on scrollbar/minimap
- fix: vertical block selection until file end

1.7.4
* different UI of sidebar tabs (I find it more useful)
+ theme color "side-toolbar BG"
+ Ctrl+[drag-drop] does copying of block
- Alt+[drag-drop] fixed if scrolls editor up/down 

1.7.2
+ command-line key --help (Linux users angry)
+ command-line key --version
+ command-line key --window=x,y,width,height
+ writes to stdout on using command-line filename/dir
- fix: macOS: caret not visible on dark theme
- fix: any click should show caret

1.7.1
+ Linux gtk2: middle-click-paste uses "primary selection" (alternate gtk clipboard), command Copy copies to primary selection too

1.7.0
+ option "mouse_mid_click_paste"
+ option "log_dialogs"
+ checkmarks visible for ConfigMenu's menu too
* default for "ui_statusbar..." changes {x} to {xx}
* renamed option "mouse_browser_scroll" to "mouse_mid_click_scroll"
* deleted option "backup" (warning shows if option set), use plugin Backup File instead
- Linux gtk2: keep clipboard text on exit
- fixes in API

1.6.9
- fixes, adds in API

1.6.8
+ Alt+click now does goto-definition
+ option "mouse_goto_definition"
+ option "autocomplete_autoshow_lexers" can have none-lexer as "-"
+ AddonManager: use temp-file on downloading (safer)
+ AddonManager: message retry/ignore/abort on download err
+ addons install.inf has field for API ver
- dont suggest multi-line sel to Find dialog

1.6.7
+ API for timer
* change default for undo_after_save

1.6.6
+ find/replace: option "in selection"
+ command "goto last editing pos" uses find_indent_vert/horz
+ handled click on micromap
+ API additions

1.6.5
+ windows version-info, for antivir
+ improve report, after installing lexer
+ command "Fold level 1" (was only 2..9)
+ command "Fold all" folds with nested ranges
- fix lexer-parser, bug when Python part inside Latex file

1.6.4
- fix deleting block, till begin of line
- fix replace-all, regex "\n" to "__"

1.6.3
+ lexer Python: update for Py3.6
+ session contains state (visible/size) of side/bottom panels
+ micromap shows selections (e.g. after "Find/ Select all")
+ micromap shows marks of "Hilite Occurrences" plugin; added theme color
+ micromap shows marks of "Spell Checker"; added theme color

1.6.1
- fixed toolbar API
+ new dialog "Addon installed"
* don't use cudatext.exe.manifest file

1.6.0
+ big internal changes in core, to support inter-line gaps (it is like "phantoms" in Sublime)
+ option "gutter_fold_icons"
+ paint unprinted arrow-left at end-of-file
+ command "Copy bookmarked lines"
+ command "Delete bookmarked lines"
- fix: Linux: hotkeys broken, if Ru layout active at start (bug in Lazarus)
- fix: issues with caret/scroll, after fold/unfold commands

1.5.6
+ syntax hiliting uses cache: scrolling up/down must be faster, for 3K+ lines
* rename option "dyn_hilite" to "lexer_dynamic_hilite"
+ add option "lexer_dynamic_hilite_max_lines"
+ add option "lexer_line_separators"
+ add option "staples_style"
* deleted option "staples_show"
+ improve lexer HTML: hilite entities &nnnn;, hilite incorrect tag props, hilite colors #nnn
+ command "duplicate line" allows selection (fwd+back)
- fix lexer Markdown

1.5.4
+ tab context menu "Set tab color" dialog redone by kvichans (in Python), dialog has N palettes (option)
+ export to HTML: optimized file
* lexer Pascal: drop hilites of "types", "implementation backgnd"

1.5.3
+ option tab_max_pos_expanded
+ lexer Pascal: hilite "exit/result"
- fix: dialogs for high-DPI (windows)
- fix: folded-blocks were empty bars on Python

1.5.2
+ API: added, optimised in 5 funcs
+ lexer Pascal: hilites for "types", "msgs"
- fix: lexer Python

1.5.1
+ AddonMan: suggests readme+history
+ API: events priority
+ API: for bottom-panel

1.5.0
+ added plugin: New File; used for dropdown arrow near "New file" tool button; not shown in Plugins
- fix: "restore lexer styles" must save lexer file
- fix: gtk2: "copy to clipbd"
- fix: windows: menus on high DPI

1.4.11
+ can install zipped addons with files in subfolder. previously: zip must have files only in root.
+ install.inf: can define variable $name in [info] and use it in lines "lexers=$name" (needed for long lexers list)
+ install.inf: can write lexers list by RegEx: [info] $name=regex:.*SQL.* 

1.4.10
+ add theme styles: Label, TagPropBad
- minor fixes

1.4.9
* now special comments (for range, for full lines), styles-of-comments, styles-of-strings: must be specified in Lexer Props dialog. They save now to .cuda-lexmap files. So can publish these with lexer zip files. You can delete: settings_default/default_lexers.json, user_lexers.json.
+ improved lexers: C#, Bash, reST, Haskell, Yaml, Search results
+ option ui_buffered (if UI looks ok, don't touch)
+ option ui_tree_icons
+ API

1.4.8
+ improved lexers: CSS, JS, PHP, Batch, Ruby, C, C++, C#, Tcl, SQL, YAML, VB, Markdown, Haskell, Makefile (using Sublime syntax tests)
* deleted lexers to addons: AutoIt, AutoHotkey

1.4.7
+ Windows: Python 3.5
* deleted built-in commands to comment/uncomment; now plugin Comments (by kvichans) preinstalled for this, with more options and config dialog
+ save/restore last tab in side-panel
+ lexers JS, Python: keywords async/await

1.4.6
+ command line allows line numbers: "cudatext filename:nnn"
+ key Esc in left panels: focus editor
+ key Enter in left panels: same as dbl-click
+ lexer JS: upd keywords, hilite `backtick-strings`
+ command "open file, ignore plugins" (to open project-files as raw text)
* deleted sorting built-in commands (plugin Sort exists)

1.4.5
* reworked themes. Instead of name.json file now 2 files: name.cuda-theme-ui, name.cuda-theme-syntax. any UI theme can be used with any Syntax theme. More flexible system. Less work on Syntax themes.
+ dialog Save Tabs: button to dont keep in session
+ AddonManager: menu item "Remove data files"

1.4.4
* breaking change (as file history saves encoding by name): renamed encodings "utf-8", "utf-8 no bom", "utf-16 le", "utf-16 be" to Sublime names "utf-8 with bom", "utf-8", "utf-16 le with bom", "utf-16 be with bom"
+ added enc: utf-16 le/be (without bom)
+ option ui_tab_show_x: now number 0..3, can show "x" for mouse-over tab only
- fix: no-carets after undo column-block
- fix: C# lexer string-rule

1.4.3
+ mouse-wheel should work in Commands dialog
+ command "go to last editing pos"
- fix: undo for BackSp 

1.4.2
+ command-line options: http://wiki.freepascal.org/CudaText#Command_line_parameters
+ Addon Manager can use proxy
+ python lib "requests" preinstalled
+ command "toggle tab-key uses spaces"
- fix: replace-all must show "wait..."
- fix: force Find dialog to desktop on show

1.4.1
- encoding: files were opened in "UTF8 no bom" by default. Now it is option "def_encoding_utf8": open as ANSI (default for Windows) or UTF8 no bom.
+ improve floating Find dialog
+ improve paint of tabs, if lot of em (30-40+)

1.4.0
+ find-dialog can be separate (option find_separate_form)
+ toolbar full themed now
* option "pylib" has suffix now (for universal config): see default.json
- fix: restoring scroll pos on opening files

1.3.28
- 3 major fixes (bugs after macOS work)
+ nicer gray built-in theme

1.3.26
+ macOS: lot of code chged for Retina support
- macOS: fix crash, on run with params
+ show shorter Python ver
- fix: show pictures 

1.3.25
+ macOS, Linux: correct full-screen
- macOS: don't assign F11/F12 by default
+ option ui_fullscreen_hide
- fix: focus after opening session
- fix: hotkeys-dialog on mac

1.3.24
+ AddonManager: menuitem "Open plugin readme"
+ AddonManager: suggests plugin's readme after install
+ install.inf: can set for items "hotkey=" and "|"-separated hotkey, e.g. "Ctrl+Alt+F|F|G". Saved into keys.json (if no "lexers=" for item), or to "keys lexer NNN.json" (if used "lexers=")
+ theme: Amy
+ theme: Cobalt
+ add lexer YAML from addons
* deleted lexer "Resource script" to addons

1.3.23
+ lexer-overrides for hotkeys: option "For current lexer" in hotkey dialog (saved in "keys lexer NNN.json")
+ find dialog: unprinted line-ends for multi-line input
- fix range-check err

1.3.22
+ Find dialog: multi-line by "+" btn
+ on closing with "ui_reopen_session":true, modified+untitled tabs content saves to session
+ AddonManager warns on adding linter w/o CudaLint
+ option find_multiline_scale
+ API

1.3.21
+ AddonManager shows linters too
+ AddonManager has new channel for Kvichans' addons (about 10-15)
+ API (for "Favorites")
+ show msg in console, if Python can't init
+ command "toggle micro-map"

1.3.20
+ dialog Find: buttons Select-all, Mark-all (place selections or markers, can clear markers by command "markers: remove all")
+ commands "Find all, and select / place markers / place bookmarks"
+ option show_cur_line_only_focused
+ option ui_max_history_menu: max_value=50
- fix: must copy to clipbd using active line-end

1.3.19
+ option unprinted_replace_to_code
* command "Delete line" deletes sel lines
+ max items in install.inf =400
- fix: dialog "Save tabs?" saving
- fix: "change endings" for "none ending" line

1.3.18
+ API (for plugin "Sort")
+ open-dialog remembers last dir (for untitled tabs, if ui_initial_dir empty)
- fix lexer Markdown
- fix lexer reST
- fix command "Update tree"

1.3.16
+ option staples_show
+ hotkey Ctrl+Tab changeable
+ command "find, first"
+ command "find, mark all"
* deleted lexer TextFiles

1.3.15
+ info http://wiki.freepascal.org/CudaText#Change_case_on_replaces
- fix: replace to "some\n" (win32)
+ dont put caret in folded [..]
+ op ui_listbox_size_y
+ lexer reST
- fixes

1.3.14
+ op fold_style
+ API
- fix: dont open folder via command-line

1.3.12
+ rework indent of column-block: like SynWrite
+ theme "Sub" (@Alexey)
* theme rename: "verbis" to "ebony" (@myCrack)
+ updated PHP completion-list (@Sanchez)
- fix: Markdown tree

1.3.11
+ indent/unindent column-blocks too
+ option mouse_wheel_zoom
+ command "enable/disable folding functionality"
- fix: lexer Python (folding, update speed)
+ API

1.3.10
+ shift+mwheel does horiz scroll
+ checkmarks in top menu (not Linux gtk2)
+ command "folding: fold/unfold at cur line"
+ update: JS completions
- fix: mwheel in one-line edits
- fix: lexer PHP word-lists
- fix: lexer Markdown
- fix: lexer Python
- fix: for 2nd monitor

1.3.9
+ new themed scrollbars: editors, trees, listboxes
+ command "Place carets on bookmarks"
+ theme "darkwolf" preinstalled
+ upd lexer "acp files"
+ API

1.3.8
+ memory optimizing (for 20M+ files w/o lexer)
* autoclose bracket: don't do if inside text
* option unprinted_replace_spec defaults to "false"
+ spec-chars 0..31 shown shorter: xNN
+ theme color "statusbar alt, font"
+ API

1.3.7
+ option ui_max_size_open
+ option ui_max_size_lexer
+ small memory optimizing

1.3.6
+ auto-close of quotes (read about auto_close_brackets)
+ auto-close of brackets/quotes works with selection
+ drag-cursor appears more correct
+ menuitem View--Lexers
* AddonManager uses filelist in txt-file at github (slower download-all, but don't use fixed mirrors of SF, safe) 

1.3.5
+ autocomplete for HTML: completion listbox inserts tag+ closing tag after caret
+ autocomplete for HTML: auto show when typed "<"+wordchar
+ autocomplete for HTML: better for a/img/link
+ autocomplete for CSS: auto show when wordchar typed on attribute pos
+ option auto_close_brackets

1.3.4
+ drag-drop text to other group: option mouse_drag_drop_focus_target
+ drag-drop text to other group: Ctrl pressed means "copy"
+ drag-drop file from explorer: use group under cursor
+ lexer Python: keywords def/class/global/lambda have other style (like ST3)
- rework restore caret on file-reload
- fix MakePlugin

1.3.3
+ drag-drop of tabs to other groups (all OSes)
+ drag-drop of select-text to other groups
+ command "rescan python plugins inf-files"
- fix: Ansi encoding was broken (since using FPC 3)

1.3.2
* lexer-lib file (lib.lxl) not used. Used .lcf files instead. Sublexer links must be stored in .cuda-lexmap files. On start app suggests to convert lexer-lib file to .lcf files.
* delete option "lexlib" (used only to convert lexer-lib to .lcf)

1.3.1
+ option ui_lexer_themes
+ color "editor, gutter font, lines with carets"
+ color "listbox, sel line font"
+ colors "statusbar, font/bg/border"
+ commands item "lexer: (none)"
- many fixes (github)

1.3.0
+ themes contain now 40 styles: to map to concrete lexer styles. Dialog "Lexer styles map" added. It shows on activating lexer w/o configured map. Maps are saved to "lexlib/*.cuda-lexmap".
* not used anymore settings/plugins.json (delete it), used install.inf's only
* renamed translations to nn_NN (e.g. ru_RU)
+ can show .gif pics
+ upd lexer XML
+ upd lexer LESS (style: color)
+ upd lexer SCSS (style: color)
+ upd lexer JS (style: doc comment)
+ upd lexer PHP (style: doc comment)
+ color "editor, combobox border"
+ statusbar macros {yb} {ye}
- fixes

1.2.29
+ lexer CSS handles @media{...}
+ char-map uses multi-carets on insert
+ more toolbar API

1.2.28
+ translation possible: see menu item Options/Translations, see folder "data/lang"
+ translation Russian, in AddonManager
+ font option named with suffix on Linux/OSX: font_name__linux, font_size__linux...
+ AddonManager has command "Visit plugin homepage"; plugins need field "homepage=" in install.inf
- fix to handle line length 10k
- fix to support SpellChecker/Linux 

1.2.26
+ option minimap_at_left
+ option caret_after_paste_column
+ option ui_statusbar_tabsize
+ option ui_max_history_edits
* option spacing_y: default=1
+ commands "open url at caret", "copy url at caret"
+ API

1.2.25.2
- fix major issue: lexerlib breaks on installing addon (reason: FPC 3)
- fix commands for line-comment
+ allow trailing comma in user.json

1.2.25
+ used FPC 3.0
+ hilite URLs: options links_hilite, links_regex
+ hilite URLs: commands to open/copy URL at pos of right-click

1.2.24
+ option font of bottom-panel listboxes
+ API (plugin Tabs List, bookmark hints in CudaLint)

1.2.23
- fix Addon Manager "Install" (SF.net blocked http)
* change in API. Must update plugs: NumberedBookmarks, PythonIntel, CudaExt, Snippets
+ added 120+ snippets for HTML. These mimic hehaviour of SynWrite's feature "SmartTagTabbing". You need plugin Snippets.
+ autodelete markers in deleted selection
+ statusbar panel "msg" now autosized (can put "msg" to left)

1.2.22
+ toolbar API
+ add ui_statusbar_panels panel "ins" (hidden by default)
+ add bottom pane "Search Res", for future
- fix Qt build: Esc key in find/goto
- fix: must set modified on conv-encoding

1.2.21
+ option micromap_show
+ option micromap_width
+ option autocomplete_autoshow_chars
+ option autocomplete_autoshow_lexers
- autocomplete now ignores case
+ improve picture mode
+ changed "Save tabs" dialog buttons (same look Win/Linux)

1.2.20
+ can open pictures: bmp/png/jpg/ico
* statusbar: remove macros {caret_line_nnn}, add {y2}
* remove option ui_tab_indent_y (center text)

1.2.19
+ better support for CudaLint (new plugin)
* statusbar: options ui_stat_ renamed, some deleted (size_x, center)
+ statusbar: option "ui_statusbar_panels", all status panels now customizable
+ statusbar: add macros {caret_line_top} {caret_line_btm}
+ option "font_quality" (can disable Cleartype)
- fix OSX rendering

1.2.18
+ API: sidebar panels
+ grouping "1+2 horz" (some session files now not correct)
+ new lexer Makefile (for GNU makefile)
+ option "ui_tree_show_lines"
+ command "ui: show side panel"
+ command "ui: show side panel, and syntax tree"
+ command "ui: hide side panel"

1.2.16
+ add commands: column select to line begin/ line end/ page up/ page down
+ faster render on Linux gtk2
- fix: grouped-undo was broken
- fix: btn "cancel search" didnt work 

1.2.15
+ option "backup"
+ plugin autocomplete: reshow list if 1 char typed
+ improved "Make Plugin", can hide items in Plugins
+ with column-block of zero width, can use Del/BkSp too
+ replace dialog key Ctrl+Alt+Enter: replace and don't find next
* changed hotkeys in Replace
* output panel uses dbl-click
- fixes

1.2.14
+ selection keeps bold/italic of selected words
+ redone plugin "Make Plugin"
* lexers HTML/HTML_/PHP/PHP_: rename, old pair removed to Addon Manager
+ option autocomplete_html
+ option autocomplete_css
* options deleted: under_color, under_color_size
+ options added: underline_color_files, underline_color_size 
- fix: caret at bad coord
- fix: must unfold found text
- fix: sort must set "modified"
- fix: HTML autocomplete in HTML part of Php

1.2.12
+ log panels API
+ splitters API
* removed lexers NSIS, Inno: to Addon Manager

1.2.11
+ AddonManager: config dialog (restart to see item); common install dialog; no more using of SynWrite wiki
+ "undo" undoes also "*" mark
+ API (better support for ExtTools)

1.2.10
+ AddonManager: items "Install plugin","Download all" (restart app 1-2 times to see menuitems)
+ option ui_lexers_grouped
+ option ui_reload_tail
+ add commands "tree: select next/prev/parent/etc node"
+ add command "tree: update tree" (need if sidebar hidden)
+ use grouped-undo for multi-carets commands

1.2.9
* removed command "search - go to tab" (better doable in plugin)
* change: color-attrib API (pls update plugins BracketsHilite, HiliteOccurrences)
* change: limit key-combo len to 3
+ improve dialog API
+ improve command "reset Python plugins"
- small fixes

1.2.8
+ custom-dialog API
+ dialog "Go to tab" shows paths
+ output panel has hotkeys (wiki help topic)
+ console: char ";" at end of command: don't log
- fix on pasting n lines at line-end
- fix replace regex "$"

1.2.5
+ support for Macros plugin
+ theme "green"
+ command "convert tabs to spaces"
+ command "convert spaces (leading) to tabs"
+ files in session must not update recents
- fix: json tree (e.g. file menu.json)
- fix: grouped undo

1.2.0
+ commands for markers like SynWrite
+ support for Snippets plugin
+ option ui_non_text (prompt/ open/ don't open)
+ option ui_non_text_buffer
+ command "run last command plugin"
- fix: ui_one_instance and non-text prompt

1.1.0
* changed format of keys.json (old fields read but not saved)
+ plugins have hotkeys like all commands: Commands dialog allows to change plugin keys. Saved in keys.json.
+ history saves folded-state
+ command "fold range at current line"
+ command "unfold range at current line"
+ command "goto next bookmark": from last goto first
+ color for "fold mark border"
