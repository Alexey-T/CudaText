object SyntAnal48: TLibSyntAnalyzer
  Formats = <  
    item
      DisplayName = 'Param'
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
    end  
    item
      DisplayName = 'Symbol'
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end  
    item
      DisplayName = 'Comment'
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end  
    item
      DisplayName = 'Const'
      Font.Color = 206
      Font.Height = -13
      Font.Name = 'Courier New'
    end  
    item
      DisplayName = 'String'
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
    end  
    item
      DisplayName = 'Var'
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end  
    item
      DisplayName = 'Id'
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
    end  
    item
      DisplayName = 'Id Function'
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      BorderTypeBottom = blDot
      BorderColorBottom = clTeal
    end  
    item
      DisplayName = 'Commd'
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end  
    item
      DisplayName = 'Color'
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end>
  TokenRules = <  
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '//.*'
      ColumnFrom = 0
      ColumnTo = 0
    end  
    item
      DisplayName = 'Comment 2'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s)/\* .*? (\*/|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end  
    item
      DisplayName = 'Param'
      StyleName = 'Param'
      BlockName = '{'
      TokenType = 7
      Expression = '[\w\.-][\w\-\#\{\}\$]+ (?=\s*\:)'
      ColumnFrom = 0
      ColumnTo = 0
    end  
    item
      DisplayName = 'Color'
      StyleName = 'Color'
      TokenType = 4
      Expression = '\#[\da-f]+'
      ColumnFrom = 0
      ColumnTo = 0
    end  
    item
      DisplayName = 'Const'
      StyleName = 'Const'
      TokenType = 5
      Expression = '\#[\da-f]+\b | \b \d+(\.\d+)? (%|\w+)?'
      ColumnFrom = 0
      ColumnTo = 0
    end  
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '("|'') .*? (\1|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end  
    item
      DisplayName = 'Var'
      StyleName = 'Var'
      TokenType = 2
      Expression = '\$\w[\w-]*'
      ColumnFrom = 0
      ColumnTo = 0
    end  
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 6
      Expression = '[\w\.\-][\w\-\#\{\}\$]+'
      ColumnFrom = 0
      ColumnTo = 0
    end  
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[;:,%\(\)\{\}\[\]\-\+\*~&\#]'
      ColumnFrom = 0
      ColumnTo = 0
    end  
    item
      DisplayName = 'Commd'
      StyleName = 'Commd'
      TokenType = 6
      Expression = '@\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <  
    item
      DisplayName = 'KeywFunc'
      StyleName = 'Id Function'
      BlockType = btTagDetect
      ConditionList = <      
        item
          TagList.Strings = (
            'abs'
            'adjust-color'
            'adjust-hue'
            'alpha'
            'append'
            'blue'
            'ceil'
            'change-color'
            'comparable'
            'complement'
            'darken'
            'desaturate'
            'fade-in'
            'fade-out'
            'floor'
            'grayscale'
            'green'
            'hsl'
            'hsla'
            'hue'
            'if'
            'invert'
            'join'
            'length'
            'lighten'
            'lightness'
            'mix'
            'nth'
            'opacify'
            'opacity'
            'percentage'
            'quote'
            'red'
            'rgb'
            'rgba'
            'round'
            'saturate'
            'saturation'
            'scale-color'
            'transparentize'
            'type-of'
            'unit'
            'unitless'
            'unquote'
          )
          TokenTypes = 64
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end  
    item
      DisplayName = '{'
      ConditionList = <      
        item
          TagList.Strings = (
            '{'
          )
          TokenTypes = 8
        end>
      BlockEnd = '}'
      Highlight = True
      InvertColors = True
      NameFmt = '%sl0'
      RefToCondEnd = True
      DynHighlight = dhRange
      HighlightPos = cpRange
      DynSelectMin = True
      IgnoreAsParent = False
      AutoCloseMode = acmCloseNearest
      AutoCloseText = '}'#13#10
    end  
    item
      DisplayName = '}'
      BlockType = btRangeEnd
      ConditionList = <      
        item
          TagList.Strings = (
            '}'
          )
          TokenTypes = 8
        end>
      BlockEnd = '{'
      HighlightPos = cpBound
      IgnoreAsParent = False
    end  
    item
      DisplayName = 'Param begin'
      ConditionList = <      
        item
          TagList.Strings = (
            ':'
          )
          TokenTypes = 520
        end      
        item
          TokenTypes = 128
        end>
      IdentIndex = 1
      BlockOffset = 1
      BlockEnd = 'Param end'
      HighlightPos = cpBound
      IgnoreAsParent = False
    end  
    item
      DisplayName = 'Param end'
      BlockType = btRangeEnd
      ConditionList = <      
        item
          TagList.Strings = (
            ';'
            '}'
          )
          TokenTypes = 8
        end>
      BlockOffset = 1
      DisplayInTree = False
      HighlightPos = cpBound
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '/* style.scss */'
    'a {'
    '  color: rgb(10, 10, 0);'
    '  &:hover { color: #ffbbff; }'
    '}'
    ''
    '@mixin rounded-top {'
    '  $side: top;'
    '  $radius: 10px;'
    '  border-#{$side}-radius: $radius;'
    '  -moz-border-radius-#{$side}: $radius;'
    '}'
    ''
    '#navbar li { @include rounded-top; }'
  )
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Var'
    'Symbol'
    'String'
    'Const'
    'Id'
    'Param'
  )
  Extentions = 'scss'
  LexerName = 'SCSS'
  Notes.Strings = (
    'Author: Alex, uvviewsoft.com'
    'Test: '
    'http://sass-lang.com/tutorial.html'
    'Func list:'
    'http://sass-lang.com/docs/yardoc/Sass/Script/Functions.html'
  )
  LineComment = '//'
  Charset = DEFAULT_CHARSET
end
